generator client {
  provider = "prisma-client-js"
  output   = "./generated/pg/client"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL2")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model auth_totp_device {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar
  user_id         Int
  scope           String?   @db.VarChar
  expiration_date DateTime? @db.Timestamp(6)
  index           String?   @db.VarChar(8)
  key             String?   @db.VarChar
  create_date     DateTime? @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  res_users       res_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id, index])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model auth_totp_wizard {
  id                                               Int        @id @default(autoincrement())
  user_id                                          Int
  create_uid                                       Int?
  write_uid                                        Int?
  secret                                           String     @db.VarChar
  url                                              String?    @db.VarChar
  code                                             String?    @db.VarChar(7)
  create_date                                      DateTime?  @db.Timestamp(6)
  write_date                                       DateTime?  @db.Timestamp(6)
  qrcode                                           Bytes?
  res_users_auth_totp_wizard_create_uidTores_users res_users? @relation("auth_totp_wizard_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_auth_totp_wizard_user_idTores_users    res_users  @relation("auth_totp_wizard_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_auth_totp_wizard_write_uidTores_users  res_users? @relation("auth_totp_wizard_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_document_layout {
  id                                                   Int            @id @default(autoincrement())
  company_id                                           Int
  report_layout_id                                     Int?
  create_uid                                           Int?
  write_uid                                            Int?
  create_date                                          DateTime?      @db.Timestamp(6)
  write_date                                           DateTime?      @db.Timestamp(6)
  res_company                                          res_company    @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_base_document_layout_create_uidTores_users res_users?     @relation("base_document_layout_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  report_layout                                        report_layout? @relation(fields: [report_layout_id], references: [id], onUpdate: NoAction)
  res_users_base_document_layout_write_uidTores_users  res_users?     @relation("base_document_layout_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_enable_profiling_wizard {
  id                                                           Int        @id @default(autoincrement())
  create_uid                                                   Int?
  write_uid                                                    Int?
  duration                                                     String?    @db.VarChar
  expiration                                                   DateTime?  @db.Timestamp(6)
  create_date                                                  DateTime?  @db.Timestamp(6)
  write_date                                                   DateTime?  @db.Timestamp(6)
  res_users_base_enable_profiling_wizard_create_uidTores_users res_users? @relation("base_enable_profiling_wizard_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_enable_profiling_wizard_write_uidTores_users  res_users? @relation("base_enable_profiling_wizard_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_import_import {
  id                                                 Int        @id @default(autoincrement())
  create_uid                                         Int?
  write_uid                                          Int?
  res_model                                          String?    @db.VarChar
  file_name                                          String?    @db.VarChar
  file_type                                          String?    @db.VarChar
  create_date                                        DateTime?  @db.Timestamp(6)
  write_date                                         DateTime?  @db.Timestamp(6)
  file                                               Bytes?
  res_users_base_import_import_create_uidTores_users res_users? @relation("base_import_import_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_import_write_uidTores_users  res_users? @relation("base_import_import_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_import_mapping {
  id                                                  Int        @id @default(autoincrement())
  create_uid                                          Int?
  write_uid                                           Int?
  res_model                                           String?    @db.VarChar
  column_name                                         String?    @db.VarChar
  field_name                                          String?    @db.VarChar
  create_date                                         DateTime?  @db.Timestamp(6)
  write_date                                          DateTime?  @db.Timestamp(6)
  res_users_base_import_mapping_create_uidTores_users res_users? @relation("base_import_mapping_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_mapping_write_uidTores_users  res_users? @relation("base_import_mapping_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([res_model], map: "base_import_mapping__res_model_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_import_module {
  id                                                 Int        @id @default(autoincrement())
  create_uid                                         Int?
  write_uid                                          Int?
  state                                              String?    @db.VarChar
  import_message                                     String?
  modules_dependencies                               String?
  force                                              Boolean?
  with_demo                                          Boolean?
  create_date                                        DateTime?  @db.Timestamp(6)
  write_date                                         DateTime?  @db.Timestamp(6)
  module_file                                        Bytes
  res_users_base_import_module_create_uidTores_users res_users? @relation("base_import_module_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_module_write_uidTores_users  res_users? @relation("base_import_module_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_language_export {
  id                                                   Int                      @id @default(autoincrement())
  model_id                                             Int?
  create_uid                                           Int?
  write_uid                                            Int?
  name                                                 String?                  @db.VarChar
  lang                                                 String                   @db.VarChar
  format                                               String                   @db.VarChar
  export_type                                          String                   @db.VarChar
  domain                                               String?                  @db.VarChar
  state                                                String?                  @db.VarChar
  create_date                                          DateTime?                @db.Timestamp(6)
  write_date                                           DateTime?                @db.Timestamp(6)
  data                                                 Bytes?
  res_users_base_language_export_create_uidTores_users res_users?               @relation("base_language_export_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model                                             ir_model?                @relation(fields: [model_id], references: [id], onUpdate: NoAction)
  res_users_base_language_export_write_uidTores_users  res_users?               @relation("base_language_export_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  rel_modules_langexport                               rel_modules_langexport[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_language_import {
  id                                                   Int        @id @default(autoincrement())
  create_uid                                           Int?
  write_uid                                            Int?
  name                                                 String     @db.VarChar
  code                                                 String     @db.VarChar
  filename                                             String     @db.VarChar
  overwrite                                            Boolean?
  create_date                                          DateTime?  @db.Timestamp(6)
  write_date                                           DateTime?  @db.Timestamp(6)
  data                                                 Bytes
  res_users_base_language_import_create_uidTores_users res_users? @relation("base_language_import_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_language_import_write_uidTores_users  res_users? @relation("base_language_import_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_language_install {
  id                                                    Int                    @id @default(autoincrement())
  create_uid                                            Int?
  write_uid                                             Int?
  overwrite                                             Boolean?
  create_date                                           DateTime?              @db.Timestamp(6)
  write_date                                            DateTime?              @db.Timestamp(6)
  res_users_base_language_install_create_uidTores_users res_users?             @relation("base_language_install_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_language_install_write_uidTores_users  res_users?             @relation("base_language_install_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_lang_install_rel                                  res_lang_install_rel[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_module_uninstall {
  id                                                    Int              @id @default(autoincrement())
  module_id                                             Int
  create_uid                                            Int?
  write_uid                                             Int?
  show_all                                              Boolean?
  create_date                                           DateTime?        @db.Timestamp(6)
  write_date                                            DateTime?        @db.Timestamp(6)
  res_users_base_module_uninstall_create_uidTores_users res_users?       @relation("base_module_uninstall_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_module_module                                      ir_module_module @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_base_module_uninstall_write_uidTores_users  res_users?       @relation("base_module_uninstall_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_module_update {
  id                                                 Int        @id @default(autoincrement())
  updated                                            Int?
  added                                              Int?
  create_uid                                         Int?
  write_uid                                          Int?
  state                                              String?    @db.VarChar
  create_date                                        DateTime?  @db.Timestamp(6)
  write_date                                         DateTime?  @db.Timestamp(6)
  res_users_base_module_update_create_uidTores_users res_users? @relation("base_module_update_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_module_update_write_uidTores_users  res_users? @relation("base_module_update_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_module_upgrade {
  id                                                  Int        @id @default(autoincrement())
  create_uid                                          Int?
  write_uid                                           Int?
  module_info                                         String?
  create_date                                         DateTime?  @db.Timestamp(6)
  write_date                                          DateTime?  @db.Timestamp(6)
  res_users_base_module_upgrade_create_uidTores_users res_users? @relation("base_module_upgrade_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_module_upgrade_write_uidTores_users  res_users? @relation("base_module_upgrade_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_partner_merge_automatic_wizard {
  id                                                                                                   Int                                                   @id @default(autoincrement())
  number_group                                                                                         Int?
  current_line_id                                                                                      Int?
  dst_partner_id                                                                                       Int?
  maximum_group                                                                                        Int?
  create_uid                                                                                           Int?
  write_uid                                                                                            Int?
  state                                                                                                String                                                @db.VarChar
  group_by_email                                                                                       Boolean?
  group_by_name                                                                                        Boolean?
  group_by_is_company                                                                                  Boolean?
  group_by_vat                                                                                         Boolean?
  group_by_parent_id                                                                                   Boolean?
  exclude_contact                                                                                      Boolean?
  exclude_journal_item                                                                                 Boolean?
  create_date                                                                                          DateTime?                                             @db.Timestamp(6)
  write_date                                                                                           DateTime?                                             @db.Timestamp(6)
  res_users_base_partner_merge_automatic_wizard_create_uidTores_users                                  res_users?                                            @relation("base_partner_merge_automatic_wizard_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  base_partner_merge_line_base_partner_merge_automatic_wizard_current_line_idTobase_partner_merge_line base_partner_merge_line?                              @relation("base_partner_merge_automatic_wizard_current_line_idTobase_partner_merge_line", fields: [current_line_id], references: [id], onUpdate: NoAction)
  res_partner                                                                                          res_partner?                                          @relation(fields: [dst_partner_id], references: [id], onUpdate: NoAction)
  res_users_base_partner_merge_automatic_wizard_write_uidTores_users                                   res_users?                                            @relation("base_partner_merge_automatic_wizard_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  base_partner_merge_automatic_wizard_res_partner_rel                                                  base_partner_merge_automatic_wizard_res_partner_rel[]
  base_partner_merge_line_base_partner_merge_line_wizard_idTobase_partner_merge_automatic_wizard       base_partner_merge_line[]                             @relation("base_partner_merge_line_wizard_idTobase_partner_merge_automatic_wizard")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_partner_merge_automatic_wizard_res_partner_rel {
  base_partner_merge_automatic_wizard_id Int
  res_partner_id                         Int
  base_partner_merge_automatic_wizard    base_partner_merge_automatic_wizard @relation(fields: [base_partner_merge_automatic_wizard_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "base_partner_merge_automatic__base_partner_merge_automatic_fkey")
  res_partner                            res_partner                         @relation(fields: [res_partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "base_partner_merge_automatic_wizard_res_par_res_partner_id_fkey")

  @@id([base_partner_merge_automatic_wizard_id, res_partner_id])
  @@index([res_partner_id, base_partner_merge_automatic_wizard_id], map: "base_partner_merge_automatic__res_partner_id_base_partner_m_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model base_partner_merge_line {
  id                                                                                                               Int                                   @id @default(autoincrement())
  wizard_id                                                                                                        Int?
  min_id                                                                                                           Int?
  create_uid                                                                                                       Int?
  write_uid                                                                                                        Int?
  aggr_ids                                                                                                         String                                @db.VarChar
  create_date                                                                                                      DateTime?                             @db.Timestamp(6)
  write_date                                                                                                       DateTime?                             @db.Timestamp(6)
  base_partner_merge_automatic_wizard_base_partner_merge_automatic_wizard_current_line_idTobase_partner_merge_line base_partner_merge_automatic_wizard[] @relation("base_partner_merge_automatic_wizard_current_line_idTobase_partner_merge_line")
  res_users_base_partner_merge_line_create_uidTores_users                                                          res_users?                            @relation("base_partner_merge_line_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  base_partner_merge_automatic_wizard_base_partner_merge_line_wizard_idTobase_partner_merge_automatic_wizard       base_partner_merge_automatic_wizard?  @relation("base_partner_merge_line_wizard_idTobase_partner_merge_automatic_wizard", fields: [wizard_id], references: [id], onUpdate: NoAction)
  res_users_base_partner_merge_line_write_uidTores_users                                                           res_users?                            @relation("base_partner_merge_line_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bus_bus {
  id                                      Int        @id @default(autoincrement())
  create_uid                              Int?
  write_uid                               Int?
  channel                                 String?    @db.VarChar
  message                                 String?    @db.VarChar
  create_date                             DateTime?  @db.Timestamp(6)
  write_date                              DateTime?  @db.Timestamp(6)
  res_users_bus_bus_create_uidTores_users res_users? @relation("bus_bus_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_bus_bus_write_uidTores_users  res_users? @relation("bus_bus_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bus_presence {
  id            Int        @id @default(autoincrement())
  user_id       Int?
  status        String?    @db.VarChar
  last_poll     DateTime?  @db.Timestamp(6)
  last_presence DateTime?  @db.Timestamp(6)
  res_users     res_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model change_password_own {
  id                                                  Int        @id @default(autoincrement())
  create_uid                                          Int?
  write_uid                                           Int?
  new_password                                        String?    @db.VarChar
  confirm_password                                    String?    @db.VarChar
  create_date                                         DateTime?  @db.Timestamp(6)
  write_date                                          DateTime?  @db.Timestamp(6)
  res_users_change_password_own_create_uidTores_users res_users? @relation("change_password_own_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_change_password_own_write_uidTores_users  res_users? @relation("change_password_own_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model change_password_user {
  id                                                   Int                    @id @default(autoincrement())
  wizard_id                                            Int
  user_id                                              Int
  create_uid                                           Int?
  write_uid                                            Int?
  user_login                                           String?                @db.VarChar
  new_passwd                                           String?                @db.VarChar
  create_date                                          DateTime?              @db.Timestamp(6)
  write_date                                           DateTime?              @db.Timestamp(6)
  res_users_change_password_user_create_uidTores_users res_users?             @relation("change_password_user_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_change_password_user_user_idTores_users    res_users              @relation("change_password_user_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  change_password_wizard                               change_password_wizard @relation(fields: [wizard_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_change_password_user_write_uidTores_users  res_users?             @relation("change_password_user_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model change_password_wizard {
  id                                                     Int                    @id @default(autoincrement())
  create_uid                                             Int?
  write_uid                                              Int?
  create_date                                            DateTime?              @db.Timestamp(6)
  write_date                                             DateTime?              @db.Timestamp(6)
  change_password_user                                   change_password_user[]
  res_users_change_password_wizard_create_uidTores_users res_users?             @relation("change_password_wizard_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_change_password_wizard_write_uidTores_users  res_users?             @relation("change_password_wizard_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model decimal_precision {
  id                                                Int        @id @default(autoincrement())
  digits                                            Int
  create_uid                                        Int?
  write_uid                                         Int?
  name                                              String     @unique(map: "decimal_precision_name_uniq") @db.VarChar
  create_date                                       DateTime?  @db.Timestamp(6)
  write_date                                        DateTime?  @db.Timestamp(6)
  res_users_decimal_precision_create_uidTores_users res_users? @relation("decimal_precision_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_decimal_precision_write_uidTores_users  res_users? @relation("decimal_precision_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model iap_account {
  id                                          Int                           @id @default(autoincrement())
  service_id                                  Int
  create_uid                                  Int?
  write_uid                                   Int?
  name                                        String?                       @db.VarChar
  account_token                               String?                       @db.VarChar(43)
  balance                                     String?                       @db.VarChar
  state                                       String?                       @db.VarChar
  service_locked                              Boolean?
  create_date                                 DateTime?                     @db.Timestamp(6)
  write_date                                  DateTime?                     @db.Timestamp(6)
  warning_threshold                           Float?
  res_users_iap_account_create_uidTores_users res_users?                    @relation("iap_account_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  iap_service                                 iap_service                   @relation(fields: [service_id], references: [id], onUpdate: NoAction)
  res_users_iap_account_write_uidTores_users  res_users?                    @relation("iap_account_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  iap_account_res_company_rel                 iap_account_res_company_rel[]
  iap_account_res_users_rel                   iap_account_res_users_rel[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model iap_account_res_company_rel {
  iap_account_id Int
  res_company_id Int
  iap_account    iap_account @relation(fields: [iap_account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_company    res_company @relation(fields: [res_company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([iap_account_id, res_company_id])
  @@index([res_company_id, iap_account_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model iap_account_res_users_rel {
  iap_account_id Int
  res_users_id   Int
  iap_account    iap_account @relation(fields: [iap_account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users      res_users   @relation(fields: [res_users_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([iap_account_id, res_users_id])
  @@index([res_users_id, iap_account_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model iap_service {
  id                                          Int           @id @default(autoincrement())
  create_uid                                  Int?
  write_uid                                   Int?
  name                                        String        @db.VarChar
  technical_name                              String        @unique(map: "iap_service_unique_technical_name") @db.VarChar
  description                                 Json
  unit_name                                   Json
  integer_balance                             Boolean
  create_date                                 DateTime?     @db.Timestamp(6)
  write_date                                  DateTime?     @db.Timestamp(6)
  iap_account                                 iap_account[]
  res_users_iap_service_create_uidTores_users res_users?    @relation("iap_service_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_iap_service_write_uidTores_users  res_users?    @relation("iap_service_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_act_client {
  id                                            Int        @id @default(autoincrement())
  binding_model_id                              Int?
  create_uid                                    Int?
  write_uid                                     Int?
  type                                          String     @db.VarChar
  path                                          String?    @unique(map: "ir_act_client_path_unique") @db.VarChar
  binding_type                                  String     @db.VarChar
  binding_view_types                            String?    @db.VarChar
  name                                          Json
  help                                          Json?
  create_date                                   DateTime?  @db.Timestamp(6)
  write_date                                    DateTime?  @db.Timestamp(6)
  tag                                           String     @db.VarChar
  target                                        String?    @db.VarChar
  res_model                                     String?    @db.VarChar
  context                                       String     @db.VarChar
  params_store                                  Bytes?
  ir_model                                      ir_model?  @relation(fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_client_create_uidTores_users res_users? @relation("ir_act_client_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_act_client_write_uidTores_users  res_users? @relation("ir_act_client_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_act_report_xml {
  id                                                Int                     @id @default(autoincrement())
  binding_model_id                                  Int?
  create_uid                                        Int?
  write_uid                                         Int?
  type                                              String                  @db.VarChar
  path                                              String?                 @unique(map: "ir_act_report_xml_path_unique") @db.VarChar
  binding_type                                      String                  @db.VarChar
  binding_view_types                                String?                 @db.VarChar
  name                                              Json
  help                                              Json?
  create_date                                       DateTime?               @db.Timestamp(6)
  write_date                                        DateTime?               @db.Timestamp(6)
  paperformat_id                                    Int?
  model                                             String                  @db.VarChar
  report_type                                       String                  @db.VarChar
  report_name                                       String                  @db.VarChar
  report_file                                       String?                 @db.VarChar
  attachment                                        String?                 @db.VarChar
  domain                                            String?                 @db.VarChar
  print_report_name                                 Json?
  multi                                             Boolean?
  attachment_use                                    Boolean?
  ir_model                                          ir_model?               @relation(fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_report_xml_create_uidTores_users res_users?              @relation("ir_act_report_xml_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  report_paperformat                                report_paperformat?     @relation(fields: [paperformat_id], references: [id], onUpdate: NoAction)
  res_users_ir_act_report_xml_write_uidTores_users  res_users?              @relation("ir_act_report_xml_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_groups_report_rel                             res_groups_report_rel[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_act_server {
  id                                                             Int                               @id @default(autoincrement())
  binding_model_id                                               Int?
  create_uid                                                     Int?
  write_uid                                                      Int?
  type                                                           String                            @db.VarChar
  path                                                           String?                           @unique(map: "ir_act_server_path_unique") @db.VarChar
  binding_type                                                   String                            @db.VarChar
  binding_view_types                                             String?                           @db.VarChar
  name                                                           Json
  help                                                           Json?
  create_date                                                    DateTime?                         @db.Timestamp(6)
  write_date                                                     DateTime?                         @db.Timestamp(6)
  sequence                                                       Int?
  model_id                                                       Int
  crud_model_id                                                  Int?
  link_field_id                                                  Int?
  update_field_id                                                Int?
  update_related_model_id                                        Int?
  selection_value                                                Int?
  usage                                                          String                            @db.VarChar
  state                                                          String                            @db.VarChar
  model_name                                                     String?                           @db.VarChar
  update_path                                                    String?                           @db.VarChar
  update_m2m_operation                                           String?                           @db.VarChar
  update_boolean_value                                           String?                           @db.VarChar
  evaluation_type                                                String?                           @db.VarChar
  resource_ref                                                   String?                           @db.VarChar
  webhook_url                                                    String?                           @db.VarChar
  code                                                           String?
  value                                                          String?
  ir_model_ir_act_server_binding_model_idToir_model              ir_model?                         @relation("ir_act_server_binding_model_idToir_model", fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_server_create_uidTores_users                  res_users?                        @relation("ir_act_server_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model_ir_act_server_crud_model_idToir_model                 ir_model?                         @relation("ir_act_server_crud_model_idToir_model", fields: [crud_model_id], references: [id], onUpdate: NoAction)
  ir_model_fields_ir_act_server_link_field_idToir_model_fields   ir_model_fields?                  @relation("ir_act_server_link_field_idToir_model_fields", fields: [link_field_id], references: [id], onUpdate: NoAction)
  ir_model_ir_act_server_model_idToir_model                      ir_model                          @relation("ir_act_server_model_idToir_model", fields: [model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_model_fields_selection                                      ir_model_fields_selection?        @relation(fields: [selection_value], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_model_fields_ir_act_server_update_field_idToir_model_fields ir_model_fields?                  @relation("ir_act_server_update_field_idToir_model_fields", fields: [update_field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_model_ir_act_server_update_related_model_idToir_model       ir_model?                         @relation("ir_act_server_update_related_model_idToir_model", fields: [update_related_model_id], references: [id], onUpdate: NoAction)
  res_users_ir_act_server_write_uidTores_users                   res_users?                        @relation("ir_act_server_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_act_server_group_rel                                        ir_act_server_group_rel[]
  ir_act_server_webhook_field_rel                                ir_act_server_webhook_field_rel[]
  ir_cron                                                        ir_cron[]
  rel_server_actions_rel_server_actions_action_idToir_act_server rel_server_actions[]              @relation("rel_server_actions_action_idToir_act_server")
  rel_server_actions_rel_server_actions_server_idToir_act_server rel_server_actions[]              @relation("rel_server_actions_server_idToir_act_server")

  @@index([model_id], map: "ir_act_server__model_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_act_server_group_rel {
  act_id        Int
  gid           Int
  ir_act_server ir_act_server @relation(fields: [act_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_groups    res_groups    @relation(fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([act_id, gid])
  @@index([gid, act_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_act_server_webhook_field_rel {
  server_id       Int
  field_id        Int
  ir_model_fields ir_model_fields @relation(fields: [field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_act_server   ir_act_server   @relation(fields: [server_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([server_id, field_id])
  @@index([field_id, server_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_act_url {
  id                                         Int        @id @default(autoincrement())
  binding_model_id                           Int?
  create_uid                                 Int?
  write_uid                                  Int?
  type                                       String     @db.VarChar
  path                                       String?    @unique(map: "ir_act_url_path_unique") @db.VarChar
  binding_type                               String     @db.VarChar
  binding_view_types                         String?    @db.VarChar
  name                                       Json
  help                                       Json?
  create_date                                DateTime?  @db.Timestamp(6)
  write_date                                 DateTime?  @db.Timestamp(6)
  target                                     String     @db.VarChar
  url                                        String
  ir_model                                   ir_model?  @relation(fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_url_create_uidTores_users res_users? @relation("ir_act_url_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_act_url_write_uidTores_users  res_users? @relation("ir_act_url_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_act_window {
  id                                                  Int                       @id @default(autoincrement())
  binding_model_id                                    Int?
  create_uid                                          Int?
  write_uid                                           Int?
  type                                                String                    @db.VarChar
  path                                                String?                   @unique(map: "ir_act_window_path_unique") @db.VarChar
  binding_type                                        String                    @db.VarChar
  binding_view_types                                  String?                   @db.VarChar
  name                                                Json
  help                                                Json?
  create_date                                         DateTime?                 @db.Timestamp(6)
  write_date                                          DateTime?                 @db.Timestamp(6)
  view_id                                             Int?
  res_id                                              Int?
  limit                                               Int?
  search_view_id                                      Int?
  domain                                              String?                   @db.VarChar
  context                                             String                    @db.VarChar
  res_model                                           String                    @db.VarChar
  target                                              String?                   @db.VarChar
  view_mode                                           String                    @db.VarChar
  mobile_view_mode                                    String?                   @db.VarChar
  usage                                               String?                   @db.VarChar
  filter                                              Boolean?
  ir_model                                            ir_model?                 @relation(fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_window_create_uidTores_users       res_users?                @relation("ir_act_window_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view_ir_act_window_search_view_idToir_ui_view ir_ui_view?               @relation("ir_act_window_search_view_idToir_ui_view", fields: [search_view_id], references: [id], onUpdate: NoAction)
  ir_ui_view_ir_act_window_view_idToir_ui_view        ir_ui_view?               @relation("ir_act_window_view_idToir_ui_view", fields: [view_id], references: [id], onUpdate: NoAction)
  res_users_ir_act_window_write_uidTores_users        res_users?                @relation("ir_act_window_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_act_window_group_rel                             ir_act_window_group_rel[]
  ir_act_window_view                                  ir_act_window_view[]
  ir_embedded_actions                                 ir_embedded_actions[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_act_window_group_rel {
  act_id        Int
  gid           Int
  ir_act_window ir_act_window @relation(fields: [act_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_groups    res_groups    @relation(fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([act_id, gid])
  @@index([gid, act_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_act_window_view {
  id                                                 Int            @id @default(autoincrement())
  sequence                                           Int?
  view_id                                            Int?
  act_window_id                                      Int?
  create_uid                                         Int?
  write_uid                                          Int?
  view_mode                                          String         @db.VarChar
  multi                                              Boolean?
  create_date                                        DateTime?      @db.Timestamp(6)
  write_date                                         DateTime?      @db.Timestamp(6)
  ir_act_window                                      ir_act_window? @relation(fields: [act_window_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_window_view_create_uidTores_users res_users?     @relation("ir_act_window_view_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view                                         ir_ui_view?    @relation(fields: [view_id], references: [id], onUpdate: NoAction)
  res_users_ir_act_window_view_write_uidTores_users  res_users?     @relation("ir_act_window_view_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([act_window_id, view_mode], map: "act_window_view_unique_mode_per_action")
}

/// This table has subclasses and requires additional setup for migrations. Visit https://pris.ly/d/table-inheritance for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_actions {
  id                                         Int        @id @default(autoincrement())
  binding_model_id                           Int?
  create_uid                                 Int?
  write_uid                                  Int?
  type                                       String     @db.VarChar
  path                                       String?    @unique(map: "ir_actions_path_unique") @db.VarChar
  binding_type                               String     @db.VarChar
  binding_view_types                         String?    @db.VarChar
  name                                       Json
  help                                       Json?
  create_date                                DateTime?  @db.Timestamp(6)
  write_date                                 DateTime?  @db.Timestamp(6)
  ir_model                                   ir_model?  @relation(fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_actions_create_uidTores_users res_users? @relation("ir_actions_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_actions_write_uidTores_users  res_users? @relation("ir_actions_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_actions_todo {
  id                                              Int        @id @default(autoincrement())
  action_id                                       Int
  sequence                                        Int?
  create_uid                                      Int?
  write_uid                                       Int?
  state                                           String     @db.VarChar
  name                                            String?    @db.VarChar
  create_date                                     DateTime?  @db.Timestamp(6)
  write_date                                      DateTime?  @db.Timestamp(6)
  res_users_ir_actions_todo_create_uidTores_users res_users? @relation("ir_actions_todo_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_actions_todo_write_uidTores_users  res_users? @relation("ir_actions_todo_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([action_id], map: "ir_actions_todo__action_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_asset {
  id                                       Int        @id @default(autoincrement())
  sequence                                 Int
  create_uid                               Int?
  write_uid                                Int?
  name                                     String     @db.VarChar
  bundle                                   String     @db.VarChar
  directive                                String?    @db.VarChar
  path                                     String     @db.VarChar
  target                                   String?    @db.VarChar
  active                                   Boolean?
  create_date                              DateTime?  @db.Timestamp(6)
  write_date                               DateTime?  @db.Timestamp(6)
  res_users_ir_asset_create_uidTores_users res_users? @relation("ir_asset_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_asset_write_uidTores_users  res_users? @relation("ir_asset_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_attachment {
  id                                            Int             @id @default(autoincrement())
  res_id                                        Int?
  company_id                                    Int?
  file_size                                     Int?
  create_uid                                    Int?
  write_uid                                     Int?
  name                                          String          @db.VarChar
  res_model                                     String?         @db.VarChar
  res_field                                     String?         @db.VarChar
  type                                          String          @db.VarChar
  url                                           String?         @db.VarChar(1024)
  access_token                                  String?         @db.VarChar
  store_fname                                   String?         @db.VarChar
  checksum                                      String?         @db.VarChar(40)
  mimetype                                      String?         @db.VarChar
  description                                   String?
  index_content                                 String?
  public                                        Boolean?
  create_date                                   DateTime?       @db.Timestamp(6)
  write_date                                    DateTime?       @db.Timestamp(6)
  db_datas                                      Bytes?
  original_id                                   Int?
  res_company                                   res_company?    @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  res_users_ir_attachment_create_uidTores_users res_users?      @relation("ir_attachment_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_attachment                                 ir_attachment?  @relation("ir_attachmentToir_attachment", fields: [original_id], references: [id], onUpdate: NoAction)
  other_ir_attachment                           ir_attachment[] @relation("ir_attachmentToir_attachment")
  res_users_ir_attachment_write_uidTores_users  res_users?      @relation("ir_attachment_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([store_fname], map: "ir_attachment__store_fname_index")
  @@index([res_model, res_id], map: "ir_attachment_res_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_config_parameter {
  id                                                  Int        @id @default(autoincrement())
  create_uid                                          Int?
  write_uid                                           Int?
  key                                                 String     @unique(map: "ir_config_parameter_key_uniq") @db.VarChar
  value                                               String
  create_date                                         DateTime?  @db.Timestamp(6)
  write_date                                          DateTime?  @db.Timestamp(6)
  res_users_ir_config_parameter_create_uidTores_users res_users? @relation("ir_config_parameter_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_config_parameter_write_uidTores_users  res_users? @relation("ir_config_parameter_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_cron {
  id                                      Int                @id @default(autoincrement())
  ir_actions_server_id                    Int
  user_id                                 Int
  interval_number                         Int
  priority                                Int?
  failure_count                           Int?
  create_uid                              Int?
  write_uid                               Int?
  cron_name                               String?            @db.VarChar
  interval_type                           String             @db.VarChar
  active                                  Boolean?
  nextcall                                DateTime           @db.Timestamp(6)
  lastcall                                DateTime?          @db.Timestamp(6)
  first_failure_date                      DateTime?          @db.Timestamp(6)
  create_date                             DateTime?          @db.Timestamp(6)
  write_date                              DateTime?          @db.Timestamp(6)
  res_users_ir_cron_create_uidTores_users res_users?         @relation("ir_cron_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_act_server                           ir_act_server      @relation(fields: [ir_actions_server_id], references: [id], onUpdate: NoAction)
  res_users_ir_cron_user_idTores_users    res_users          @relation("ir_cron_user_idTores_users", fields: [user_id], references: [id], onUpdate: NoAction)
  res_users_ir_cron_write_uidTores_users  res_users?         @relation("ir_cron_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_cron_progress                        ir_cron_progress[]
  ir_cron_trigger                         ir_cron_trigger[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_cron_progress {
  id                                               Int        @id @default(autoincrement())
  cron_id                                          Int
  remaining                                        Int?
  done                                             Int?
  timed_out_counter                                Int?
  create_uid                                       Int?
  write_uid                                        Int?
  deactivate                                       Boolean?
  create_date                                      DateTime?  @db.Timestamp(6)
  write_date                                       DateTime?  @db.Timestamp(6)
  res_users_ir_cron_progress_create_uidTores_users res_users? @relation("ir_cron_progress_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_cron                                          ir_cron    @relation(fields: [cron_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_cron_progress_write_uidTores_users  res_users? @relation("ir_cron_progress_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([cron_id], map: "ir_cron_progress__cron_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_cron_trigger {
  id                                              Int        @id @default(autoincrement())
  cron_id                                         Int?
  create_uid                                      Int?
  write_uid                                       Int?
  call_at                                         DateTime?  @db.Timestamp(6)
  create_date                                     DateTime?  @db.Timestamp(6)
  write_date                                      DateTime?  @db.Timestamp(6)
  res_users_ir_cron_trigger_create_uidTores_users res_users? @relation("ir_cron_trigger_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_cron                                         ir_cron?   @relation(fields: [cron_id], references: [id], onUpdate: NoAction)
  res_users_ir_cron_trigger_write_uidTores_users  res_users? @relation("ir_cron_trigger_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([call_at], map: "ir_cron_trigger__call_at_index")
  @@index([cron_id], map: "ir_cron_trigger__cron_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_default {
  id                                         Int             @id @default(autoincrement())
  field_id                                   Int
  user_id                                    Int?
  company_id                                 Int?
  create_uid                                 Int?
  write_uid                                  Int?
  condition                                  String?         @db.VarChar
  json_value                                 String          @db.VarChar
  create_date                                DateTime?       @db.Timestamp(6)
  write_date                                 DateTime?       @db.Timestamp(6)
  res_company                                res_company?    @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_default_create_uidTores_users res_users?      @relation("ir_default_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model_fields                            ir_model_fields @relation(fields: [field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_default_user_idTores_users    res_users?      @relation("ir_default_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_default_write_uidTores_users  res_users?      @relation("ir_default_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([company_id], map: "ir_default__company_id_index")
  @@index([field_id], map: "ir_default__field_id_index")
  @@index([user_id], map: "ir_default__user_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_demo {
  id                                      Int        @id @default(autoincrement())
  create_uid                              Int?
  write_uid                               Int?
  create_date                             DateTime?  @db.Timestamp(6)
  write_date                              DateTime?  @db.Timestamp(6)
  res_users_ir_demo_create_uidTores_users res_users? @relation("ir_demo_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_demo_write_uidTores_users  res_users? @relation("ir_demo_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_demo_failure {
  id                                              Int                     @id @default(autoincrement())
  module_id                                       Int
  wizard_id                                       Int?
  create_uid                                      Int?
  write_uid                                       Int?
  error                                           String?                 @db.VarChar
  create_date                                     DateTime?               @db.Timestamp(6)
  write_date                                      DateTime?               @db.Timestamp(6)
  res_users_ir_demo_failure_create_uidTores_users res_users?              @relation("ir_demo_failure_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_module_module                                ir_module_module        @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_demo_failure_wizard                          ir_demo_failure_wizard? @relation(fields: [wizard_id], references: [id], onUpdate: NoAction)
  res_users_ir_demo_failure_write_uidTores_users  res_users?              @relation("ir_demo_failure_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_demo_failure_wizard {
  id                                                     Int               @id @default(autoincrement())
  create_uid                                             Int?
  write_uid                                              Int?
  create_date                                            DateTime?         @db.Timestamp(6)
  write_date                                             DateTime?         @db.Timestamp(6)
  ir_demo_failure                                        ir_demo_failure[]
  res_users_ir_demo_failure_wizard_create_uidTores_users res_users?        @relation("ir_demo_failure_wizard_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_demo_failure_wizard_write_uidTores_users  res_users?        @relation("ir_demo_failure_wizard_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_embedded_actions {
  id                                                  Int                                  @id @default(autoincrement())
  sequence                                            Int?
  parent_action_id                                    Int
  parent_res_id                                       Int?
  action_id                                           Int?
  user_id                                             Int?
  create_uid                                          Int?
  write_uid                                           Int?
  parent_res_model                                    String                               @db.VarChar
  python_method                                       String?                              @db.VarChar
  default_view_mode                                   String?                              @db.VarChar
  domain                                              String?                              @db.VarChar
  context                                             String?                              @db.VarChar
  name                                                Json?
  create_date                                         DateTime?                            @db.Timestamp(6)
  write_date                                          DateTime?                            @db.Timestamp(6)
  res_users_ir_embedded_actions_create_uidTores_users res_users?                           @relation("ir_embedded_actions_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_act_window                                       ir_act_window                        @relation(fields: [parent_action_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_embedded_actions_user_idTores_users    res_users?                           @relation("ir_embedded_actions_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_embedded_actions_write_uidTores_users  res_users?                           @relation("ir_embedded_actions_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_embedded_actions_res_groups_rel                  ir_embedded_actions_res_groups_rel[]
  ir_filters                                          ir_filters[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_embedded_actions_res_groups_rel {
  ir_embedded_actions_id Int
  res_groups_id          Int
  ir_embedded_actions    ir_embedded_actions @relation(fields: [ir_embedded_actions_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_groups             res_groups          @relation(fields: [res_groups_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([ir_embedded_actions_id, res_groups_id])
  @@index([res_groups_id, ir_embedded_actions_id], map: "ir_embedded_actions_res_group_res_groups_id_ir_embedded_act_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_exports {
  id                                         Int               @id @default(autoincrement())
  create_uid                                 Int?
  write_uid                                  Int?
  name                                       String?           @db.VarChar
  resource                                   String?           @db.VarChar
  create_date                                DateTime?         @db.Timestamp(6)
  write_date                                 DateTime?         @db.Timestamp(6)
  res_users_ir_exports_create_uidTores_users res_users?        @relation("ir_exports_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_exports_write_uidTores_users  res_users?        @relation("ir_exports_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_exports_line                            ir_exports_line[]

  @@index([resource], map: "ir_exports__resource_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_exports_line {
  id                                              Int         @id @default(autoincrement())
  export_id                                       Int?
  create_uid                                      Int?
  write_uid                                       Int?
  name                                            String?     @db.VarChar
  create_date                                     DateTime?   @db.Timestamp(6)
  write_date                                      DateTime?   @db.Timestamp(6)
  res_users_ir_exports_line_create_uidTores_users res_users?  @relation("ir_exports_line_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_exports                                      ir_exports? @relation(fields: [export_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_exports_line_write_uidTores_users  res_users?  @relation("ir_exports_line_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([export_id], map: "ir_exports_line__export_id_index")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model ir_filters {
  id                                         Int                  @id @default(autoincrement())
  user_id                                    Int?
  action_id                                  Int?
  embedded_action_id                         Int?
  embedded_parent_res_id                     Int?
  create_uid                                 Int?
  write_uid                                  Int?
  name                                       String               @db.VarChar
  sort                                       String               @db.VarChar
  model_id                                   String               @db.VarChar
  domain                                     String
  context                                    String
  is_default                                 Boolean?
  active                                     Boolean?
  create_date                                DateTime?            @db.Timestamp(6)
  write_date                                 DateTime?            @db.Timestamp(6)
  res_users_ir_filters_create_uidTores_users res_users?           @relation("ir_filters_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_embedded_actions                        ir_embedded_actions? @relation(fields: [embedded_action_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_filters_user_idTores_users    res_users?           @relation("ir_filters_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_filters_write_uidTores_users  res_users?           @relation("ir_filters_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([model_id, user_id, action_id, embedded_action_id, embedded_parent_res_id, name], map: "ir_filters_name_model_uid_unique")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_logging {
  id          Int       @id @default(autoincrement())
  create_uid  Int?
  write_uid   Int?
  name        String    @db.VarChar
  type        String    @db.VarChar
  dbname      String?   @db.VarChar
  level       String?   @db.VarChar
  path        String    @db.VarChar
  func        String    @db.VarChar
  line        String    @db.VarChar
  message     String
  create_date DateTime? @db.Timestamp(6)
  write_date  DateTime? @db.Timestamp(6)

  @@index([dbname], map: "ir_logging__dbname_index")
  @@index([level], map: "ir_logging__level_index")
  @@index([type], map: "ir_logging__type_index")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_mail_server {
  id                                             Int        @id @default(autoincrement())
  smtp_port                                      Int?
  sequence                                       Int?
  create_uid                                     Int?
  write_uid                                      Int?
  name                                           String     @db.VarChar
  from_filter                                    String?    @db.VarChar
  smtp_host                                      String?    @db.VarChar
  smtp_authentication                            String     @db.VarChar
  smtp_user                                      String?    @db.VarChar
  smtp_pass                                      String?    @db.VarChar
  smtp_encryption                                String     @db.VarChar
  smtp_debug                                     Boolean?
  active                                         Boolean?
  create_date                                    DateTime?  @db.Timestamp(6)
  write_date                                     DateTime?  @db.Timestamp(6)
  max_email_size                                 Float?
  smtp_ssl_certificate                           Bytes?
  smtp_ssl_private_key                           Bytes?
  res_users_ir_mail_server_create_uidTores_users res_users? @relation("ir_mail_server_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_mail_server_write_uidTores_users  res_users? @relation("ir_mail_server_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([name], map: "ir_mail_server__name_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_model {
  id                                                            Int                    @id @default(autoincrement())
  create_uid                                                    Int?
  write_uid                                                     Int?
  model                                                         String                 @unique(map: "ir_model_obj_name_uniq") @db.VarChar
  order                                                         String                 @db.VarChar
  state                                                         String?                @db.VarChar
  name                                                          Json
  info                                                          String?
  transient                                                     Boolean?
  create_date                                                   DateTime?              @db.Timestamp(6)
  write_date                                                    DateTime?              @db.Timestamp(6)
  base_language_export                                          base_language_export[]
  ir_act_client                                                 ir_act_client[]
  ir_act_report_xml                                             ir_act_report_xml[]
  ir_act_server_ir_act_server_binding_model_idToir_model        ir_act_server[]        @relation("ir_act_server_binding_model_idToir_model")
  ir_act_server_ir_act_server_crud_model_idToir_model           ir_act_server[]        @relation("ir_act_server_crud_model_idToir_model")
  ir_act_server_ir_act_server_model_idToir_model                ir_act_server[]        @relation("ir_act_server_model_idToir_model")
  ir_act_server_ir_act_server_update_related_model_idToir_model ir_act_server[]        @relation("ir_act_server_update_related_model_idToir_model")
  ir_act_url                                                    ir_act_url[]
  ir_act_window                                                 ir_act_window[]
  ir_actions                                                    ir_actions[]
  res_users_ir_model_create_uidTores_users                      res_users?             @relation("ir_model_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_model_write_uidTores_users                       res_users?             @relation("ir_model_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_model_access                                               ir_model_access[]
  ir_model_constraint                                           ir_model_constraint[]
  ir_model_fields                                               ir_model_fields[]
  ir_model_inherit_ir_model_inherit_model_idToir_model          ir_model_inherit[]     @relation("ir_model_inherit_model_idToir_model")
  ir_model_inherit_ir_model_inherit_parent_idToir_model         ir_model_inherit[]     @relation("ir_model_inherit_parent_idToir_model")
  ir_model_relation                                             ir_model_relation[]
  ir_rule                                                       ir_rule[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_model_access {
  id                                              Int         @id @default(autoincrement())
  model_id                                        Int
  group_id                                        Int?
  create_uid                                      Int?
  write_uid                                       Int?
  name                                            String      @db.VarChar
  active                                          Boolean?
  perm_read                                       Boolean?
  perm_write                                      Boolean?
  perm_create                                     Boolean?
  perm_unlink                                     Boolean?
  create_date                                     DateTime?   @db.Timestamp(6)
  write_date                                      DateTime?   @db.Timestamp(6)
  res_users_ir_model_access_create_uidTores_users res_users?  @relation("ir_model_access_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_groups                                      res_groups? @relation(fields: [group_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  ir_model                                        ir_model    @relation(fields: [model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_model_access_write_uidTores_users  res_users?  @relation("ir_model_access_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([group_id], map: "ir_model_access__group_id_index")
  @@index([model_id], map: "ir_model_access__model_id_index")
  @@index([name], map: "ir_model_access__name_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_model_constraint {
  id                                                  Int              @id @default(autoincrement())
  model                                               Int
  module                                              Int
  create_uid                                          Int?
  write_uid                                           Int?
  name                                                String           @db.VarChar
  definition                                          String?          @db.VarChar
  type                                                String           @db.VarChar(1)
  message                                             Json?
  write_date                                          DateTime?        @db.Timestamp(6)
  create_date                                         DateTime?        @db.Timestamp(6)
  res_users_ir_model_constraint_create_uidTores_users res_users?       @relation("ir_model_constraint_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model                                            ir_model         @relation(fields: [model], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_module_module                                    ir_module_module @relation(fields: [module], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_model_constraint_write_uidTores_users  res_users?       @relation("ir_model_constraint_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([name, module], map: "ir_model_constraint_module_name_uniq")
  @@index([model], map: "ir_model_constraint__model_index")
  @@index([module], map: "ir_model_constraint__module_index")
  @@index([name], map: "ir_model_constraint__name_index")
  @@index([type], map: "ir_model_constraint__type_index")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model ir_model_data {
  id                                            Int        @id @default(autoincrement())
  create_uid                                    Int?
  create_date                                   DateTime?  @default(dbgenerated("(now() AT TIME ZONE 'UTC'::text)")) @db.Timestamp(6)
  write_date                                    DateTime?  @default(dbgenerated("(now() AT TIME ZONE 'UTC'::text)")) @db.Timestamp(6)
  write_uid                                     Int?
  res_id                                        Int?
  noupdate                                      Boolean?   @default(false)
  name                                          String     @db.VarChar
  module                                        String     @db.VarChar
  model                                         String     @db.VarChar
  res_users_ir_model_data_create_uidTores_users res_users? @relation("ir_model_data_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_model_data_write_uidTores_users  res_users? @relation("ir_model_data_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([module, name], map: "ir_model_data_module_name_uniq_index")
  @@index([model, res_id], map: "ir_model_data_model_res_id_index")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_model_fields {
  id                                                                       Int                               @id @default(autoincrement())
  relation_field_id                                                        Int?
  model_id                                                                 Int
  related_field_id                                                         Int?
  size                                                                     Int?
  create_uid                                                               Int?
  write_uid                                                                Int?
  name                                                                     String                            @db.VarChar
  complete_name                                                            String?                           @db.VarChar
  model                                                                    String                            @db.VarChar
  relation                                                                 String?                           @db.VarChar
  relation_field                                                           String?                           @db.VarChar
  ttype                                                                    String                            @db.VarChar
  related                                                                  String?                           @db.VarChar
  state                                                                    String                            @db.VarChar
  on_delete                                                                String?                           @db.VarChar
  domain                                                                   String?                           @db.VarChar
  relation_table                                                           String?                           @db.VarChar
  column1                                                                  String?                           @db.VarChar
  column2                                                                  String?                           @db.VarChar
  depends                                                                  String?                           @db.VarChar
  currency_field                                                           String?                           @db.VarChar
  field_description                                                        Json
  help                                                                     Json?
  compute                                                                  String?
  copied                                                                   Boolean?
  required                                                                 Boolean?
  readonly                                                                 Boolean?
  index                                                                    Boolean?
  translate                                                                Boolean?
  company_dependent                                                        Boolean?
  group_expand                                                             Boolean?
  selectable                                                               Boolean?
  store                                                                    Boolean?
  sanitize                                                                 Boolean?
  sanitize_overridable                                                     Boolean?
  sanitize_tags                                                            Boolean?
  sanitize_attributes                                                      Boolean?
  sanitize_style                                                           Boolean?
  sanitize_form                                                            Boolean?
  strip_style                                                              Boolean?
  strip_classes                                                            Boolean?
  create_date                                                              DateTime?                         @db.Timestamp(6)
  write_date                                                               DateTime?                         @db.Timestamp(6)
  ir_act_server_ir_act_server_link_field_idToir_model_fields               ir_act_server[]                   @relation("ir_act_server_link_field_idToir_model_fields")
  ir_act_server_ir_act_server_update_field_idToir_model_fields             ir_act_server[]                   @relation("ir_act_server_update_field_idToir_model_fields")
  ir_act_server_webhook_field_rel                                          ir_act_server_webhook_field_rel[]
  ir_default                                                               ir_default[]
  res_users_ir_model_fields_create_uidTores_users                          res_users?                        @relation("ir_model_fields_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model                                                                 ir_model                          @relation(fields: [model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_model_fields_ir_model_fields_related_field_idToir_model_fields        ir_model_fields?                  @relation("ir_model_fields_related_field_idToir_model_fields", fields: [related_field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_ir_model_fields_ir_model_fields_related_field_idToir_model_fields  ir_model_fields[]                 @relation("ir_model_fields_related_field_idToir_model_fields")
  ir_model_fields_ir_model_fields_relation_field_idToir_model_fields       ir_model_fields?                  @relation("ir_model_fields_relation_field_idToir_model_fields", fields: [relation_field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_ir_model_fields_ir_model_fields_relation_field_idToir_model_fields ir_model_fields[]                 @relation("ir_model_fields_relation_field_idToir_model_fields")
  res_users_ir_model_fields_write_uidTores_users                           res_users?                        @relation("ir_model_fields_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_model_fields_group_rel                                                ir_model_fields_group_rel[]
  ir_model_fields_selection                                                ir_model_fields_selection[]
  ir_model_inherit                                                         ir_model_inherit[]

  @@unique([model, name], map: "ir_model_fields_name_unique")
  @@index([complete_name], map: "ir_model_fields__complete_name_index")
  @@index([model_id], map: "ir_model_fields__model_id_index")
  @@index([model], map: "ir_model_fields__model_index")
  @@index([name], map: "ir_model_fields__name_index")
  @@index([state], map: "ir_model_fields__state_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_model_fields_group_rel {
  field_id        Int
  group_id        Int
  ir_model_fields ir_model_fields @relation(fields: [field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_groups      res_groups      @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([field_id, group_id])
  @@index([group_id, field_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_model_fields_selection {
  id                                                        Int             @id @default(autoincrement())
  field_id                                                  Int
  sequence                                                  Int?
  create_uid                                                Int?
  write_uid                                                 Int?
  value                                                     String          @db.VarChar
  name                                                      Json
  create_date                                               DateTime?       @db.Timestamp(6)
  write_date                                                DateTime?       @db.Timestamp(6)
  ir_act_server                                             ir_act_server[]
  res_users_ir_model_fields_selection_create_uidTores_users res_users?      @relation("ir_model_fields_selection_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model_fields                                           ir_model_fields @relation(fields: [field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_model_fields_selection_write_uidTores_users  res_users?      @relation("ir_model_fields_selection_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([field_id, value], map: "ir_model_fields_selection_selection_field_uniq")
  @@index([field_id], map: "ir_model_fields_selection__field_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_model_inherit {
  id                                            Int              @id @default(autoincrement())
  model_id                                      Int
  parent_id                                     Int
  parent_field_id                               Int?
  ir_model_ir_model_inherit_model_idToir_model  ir_model         @relation("ir_model_inherit_model_idToir_model", fields: [model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_model_fields                               ir_model_fields? @relation(fields: [parent_field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_model_ir_model_inherit_parent_idToir_model ir_model         @relation("ir_model_inherit_parent_idToir_model", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([model_id, parent_id], map: "ir_model_inherit_uniq")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_model_relation {
  id                                                Int              @id @default(autoincrement())
  model                                             Int
  module                                            Int
  create_uid                                        Int?
  write_uid                                         Int?
  name                                              String           @db.VarChar
  write_date                                        DateTime?        @db.Timestamp(6)
  create_date                                       DateTime?        @db.Timestamp(6)
  res_users_ir_model_relation_create_uidTores_users res_users?       @relation("ir_model_relation_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model                                          ir_model         @relation(fields: [model], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_module_module                                  ir_module_module @relation(fields: [module], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_model_relation_write_uidTores_users  res_users?       @relation("ir_model_relation_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([model], map: "ir_model_relation__model_index")
  @@index([module], map: "ir_model_relation__module_index")
  @@index([name], map: "ir_model_relation__name_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_module_category {
  id                                                 Int                  @id @default(autoincrement())
  create_uid                                         Int?
  create_date                                        DateTime?            @db.Timestamp(6)
  write_date                                         DateTime?            @db.Timestamp(6)
  write_uid                                          Int?
  parent_id                                          Int?
  name                                               Json
  sequence                                           Int?
  description                                        Json?
  visible                                            Boolean?
  exclusive                                          Boolean?
  res_users_ir_module_category_create_uidTores_users res_users?           @relation("ir_module_category_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_module_category                                 ir_module_category?  @relation("ir_module_categoryToir_module_category", fields: [parent_id], references: [id], onUpdate: NoAction)
  other_ir_module_category                           ir_module_category[] @relation("ir_module_categoryToir_module_category")
  res_users_ir_module_category_write_uidTores_users  res_users?           @relation("ir_module_category_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_module_module                                   ir_module_module[]
  res_groups                                         res_groups[]

  @@index([parent_id], map: "ir_module_category__parent_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_module_module {
  id                                               Int                           @id @default(autoincrement())
  create_uid                                       Int?
  create_date                                      DateTime?                     @db.Timestamp(6)
  write_date                                       DateTime?                     @db.Timestamp(6)
  write_uid                                        Int?
  website                                          String?                       @db.VarChar
  summary                                          Json?
  name                                             String                        @unique(map: "ir_module_module_name_uniq") @db.VarChar
  author                                           String?                       @db.VarChar
  icon                                             String?                       @db.VarChar
  state                                            String?                       @db.VarChar(16)
  latest_version                                   String?                       @db.VarChar
  shortdesc                                        Json?
  category_id                                      Int?
  description                                      Json?
  application                                      Boolean?                      @default(false)
  demo                                             Boolean?                      @default(false)
  web                                              Boolean?                      @default(false)
  license                                          String?                       @db.VarChar(32)
  sequence                                         Int?                          @default(100)
  auto_install                                     Boolean?                      @default(false)
  to_buy                                           Boolean?                      @default(false)
  maintainer                                       String?                       @db.VarChar
  published_version                                String?                       @db.VarChar
  url                                              String?                       @db.VarChar
  contributors                                     String?
  menus_by_module                                  String?
  reports_by_module                                String?
  views_by_module                                  String?
  module_type                                      String?                       @db.VarChar
  imported                                         Boolean?
  base_module_uninstall                            base_module_uninstall[]
  ir_demo_failure                                  ir_demo_failure[]
  ir_model_constraint                              ir_model_constraint[]
  ir_model_relation                                ir_model_relation[]
  ir_module_category                               ir_module_category?           @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  res_users_ir_module_module_create_uidTores_users res_users?                    @relation("ir_module_module_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_module_module_write_uidTores_users  res_users?                    @relation("ir_module_module_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_module_module_dependency                      ir_module_module_dependency[]
  ir_module_module_exclusion                       ir_module_module_exclusion[]
  module_country                                   module_country[]
  rel_modules_langexport                           rel_modules_langexport[]

  @@index([category_id], map: "ir_module_module__category_id_index")
  @@index([state], map: "ir_module_module__state_index")
}

model ir_module_module_dependency {
  id                    Int               @id @default(autoincrement())
  name                  String?           @db.VarChar
  module_id             Int?
  auto_install_required Boolean?          @default(true)
  ir_module_module      ir_module_module? @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([name], map: "ir_module_module_dependency__name_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_module_module_exclusion {
  id                                                         Int               @id @default(autoincrement())
  module_id                                                  Int?
  create_uid                                                 Int?
  write_uid                                                  Int?
  name                                                       String?           @db.VarChar
  create_date                                                DateTime?         @db.Timestamp(6)
  write_date                                                 DateTime?         @db.Timestamp(6)
  res_users_ir_module_module_exclusion_create_uidTores_users res_users?        @relation("ir_module_module_exclusion_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_module_module                                           ir_module_module? @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_module_module_exclusion_write_uidTores_users  res_users?        @relation("ir_module_module_exclusion_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([name], map: "ir_module_module_exclusion__name_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_profile {
  id               Int       @id @default(autoincrement())
  sql_count        Int?
  entry_count      Int?
  session          String?   @db.VarChar
  name             String?   @db.VarChar
  init_stack_trace String?
  sql              String?
  traces_async     String?
  traces_sync      String?
  qweb             String?
  create_date      DateTime? @db.Timestamp(6)
  duration         Float?

  @@index([session], map: "ir_profile__session_index")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_rule {
  id                                      Int              @id @default(autoincrement())
  model_id                                Int
  create_uid                              Int?
  write_uid                               Int?
  name                                    String?          @db.VarChar
  domain_force                            String?
  active                                  Boolean?
  perm_read                               Boolean?
  perm_write                              Boolean?
  perm_create                             Boolean?
  perm_unlink                             Boolean?
  global                                  Boolean?
  create_date                             DateTime?        @db.Timestamp(6)
  write_date                              DateTime?        @db.Timestamp(6)
  res_users_ir_rule_create_uidTores_users res_users?       @relation("ir_rule_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model                                ir_model         @relation(fields: [model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_rule_write_uidTores_users  res_users?       @relation("ir_rule_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  rule_group_rel                          rule_group_rel[]

  @@index([model_id], map: "ir_rule__model_id_index")
  @@index([name], map: "ir_rule__name_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_sequence {
  id                                          Int                      @id @default(autoincrement())
  number_next                                 Int
  number_increment                            Int
  padding                                     Int
  company_id                                  Int?
  create_uid                                  Int?
  write_uid                                   Int?
  name                                        String                   @db.VarChar
  code                                        String?                  @db.VarChar
  implementation                              String                   @db.VarChar
  prefix                                      String?                  @db.VarChar
  suffix                                      String?                  @db.VarChar
  active                                      Boolean?
  use_date_range                              Boolean?
  create_date                                 DateTime?                @db.Timestamp(6)
  write_date                                  DateTime?                @db.Timestamp(6)
  res_company                                 res_company?             @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  res_users_ir_sequence_create_uidTores_users res_users?               @relation("ir_sequence_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_sequence_write_uidTores_users  res_users?               @relation("ir_sequence_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_sequence_date_range                      ir_sequence_date_range[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_sequence_date_range {
  id                                                     Int         @id @default(autoincrement())
  sequence_id                                            Int
  number_next                                            Int
  create_uid                                             Int?
  write_uid                                              Int?
  date_from                                              DateTime    @db.Date
  date_to                                                DateTime    @db.Date
  create_date                                            DateTime?   @db.Timestamp(6)
  write_date                                             DateTime?   @db.Timestamp(6)
  res_users_ir_sequence_date_range_create_uidTores_users res_users?  @relation("ir_sequence_date_range_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_sequence                                            ir_sequence @relation(fields: [sequence_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_sequence_date_range_write_uidTores_users  res_users?  @relation("ir_sequence_date_range_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_ui_menu {
  id                                         Int                           @id @default(autoincrement())
  sequence                                   Int?
  parent_id                                  Int?
  create_uid                                 Int?
  write_uid                                  Int?
  parent_path                                String?                       @db.VarChar
  web_icon                                   String?                       @db.VarChar
  action                                     String?                       @db.VarChar
  name                                       Json
  active                                     Boolean?
  create_date                                DateTime?                     @db.Timestamp(6)
  write_date                                 DateTime?                     @db.Timestamp(6)
  res_users_ir_ui_menu_create_uidTores_users res_users?                    @relation("ir_ui_menu_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_menu                                 ir_ui_menu?                   @relation("ir_ui_menuToir_ui_menu", fields: [parent_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  other_ir_ui_menu                           ir_ui_menu[]                  @relation("ir_ui_menuToir_ui_menu")
  res_users_ir_ui_menu_write_uidTores_users  res_users?                    @relation("ir_ui_menu_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_ui_menu_group_rel                       ir_ui_menu_group_rel[]
  wizard_ir_model_menu_create                wizard_ir_model_menu_create[]

  @@index([parent_id], map: "ir_ui_menu__parent_id_index")
  @@index([parent_path], map: "ir_ui_menu__parent_path_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_ui_menu_group_rel {
  menu_id    Int
  gid        Int
  res_groups res_groups @relation(fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_ui_menu ir_ui_menu @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([menu_id, gid])
  @@index([gid, menu_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_ui_view {
  id                                                                        Int                      @id @default(autoincrement())
  priority                                                                  Int
  inherit_id                                                                Int?
  create_uid                                                                Int?
  write_uid                                                                 Int?
  name                                                                      String                   @db.VarChar
  model                                                                     String?                  @db.VarChar
  key                                                                       String?                  @db.VarChar
  type                                                                      String?                  @db.VarChar
  arch_fs                                                                   String?                  @db.VarChar
  mode                                                                      String                   @db.VarChar
  arch_db                                                                   Json?
  arch_prev                                                                 String?
  arch_updated                                                              Boolean?
  active                                                                    Boolean?
  create_date                                                               DateTime?                @db.Timestamp(6)
  write_date                                                                DateTime?                @db.Timestamp(6)
  ir_act_window_ir_act_window_search_view_idToir_ui_view                    ir_act_window[]          @relation("ir_act_window_search_view_idToir_ui_view")
  ir_act_window_ir_act_window_view_idToir_ui_view                           ir_act_window[]          @relation("ir_act_window_view_idToir_ui_view")
  ir_act_window_view                                                        ir_act_window_view[]
  res_users_ir_ui_view_create_uidTores_users                                res_users?               @relation("ir_ui_view_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view                                                                ir_ui_view?              @relation("ir_ui_viewToir_ui_view", fields: [inherit_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  other_ir_ui_view                                                          ir_ui_view[]             @relation("ir_ui_viewToir_ui_view")
  res_users_ir_ui_view_write_uidTores_users                                 res_users?               @relation("ir_ui_view_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_ui_view_custom                                                         ir_ui_view_custom[]
  ir_ui_view_group_rel                                                      ir_ui_view_group_rel[]
  report_layout                                                             report_layout[]
  res_company                                                               res_company[]
  res_country                                                               res_country[]
  reset_view_arch_wizard_reset_view_arch_wizard_compare_view_idToir_ui_view reset_view_arch_wizard[] @relation("reset_view_arch_wizard_compare_view_idToir_ui_view")
  reset_view_arch_wizard_reset_view_arch_wizard_view_idToir_ui_view         reset_view_arch_wizard[] @relation("reset_view_arch_wizard_view_idToir_ui_view")

  @@index([inherit_id], map: "ir_ui_view__inherit_id_index")
  @@index([model], map: "ir_ui_view__model_index")
  @@index([model, inherit_id], map: "ir_ui_view_model_type_inherit_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_ui_view_custom {
  id                                                Int        @id @default(autoincrement())
  ref_id                                            Int
  user_id                                           Int
  create_uid                                        Int?
  write_uid                                         Int?
  arch                                              String
  create_date                                       DateTime?  @db.Timestamp(6)
  write_date                                        DateTime?  @db.Timestamp(6)
  res_users_ir_ui_view_custom_create_uidTores_users res_users? @relation("ir_ui_view_custom_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view                                        ir_ui_view @relation(fields: [ref_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_ui_view_custom_user_idTores_users    res_users  @relation("ir_ui_view_custom_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_ui_view_custom_write_uidTores_users  res_users? @relation("ir_ui_view_custom_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([ref_id], map: "ir_ui_view_custom__ref_id_index")
  @@index([user_id], map: "ir_ui_view_custom__user_id_index")
  @@index([user_id, ref_id], map: "ir_ui_view_custom_user_id_ref_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ir_ui_view_group_rel {
  view_id    Int
  group_id   Int
  res_groups res_groups @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_ui_view ir_ui_view @relation(fields: [view_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([view_id, group_id])
  @@index([group_id, view_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model module_country {
  module_id        Int
  country_id       Int
  res_country      res_country      @relation(fields: [country_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_module_module ir_module_module @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([module_id, country_id])
  @@index([country_id, module_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rel_modules_langexport {
  wiz_id               Int
  module_id            Int
  ir_module_module     ir_module_module     @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  base_language_export base_language_export @relation(fields: [wiz_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([wiz_id, module_id])
  @@index([module_id, wiz_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rel_server_actions {
  server_id                                                 Int
  action_id                                                 Int
  ir_act_server_rel_server_actions_action_idToir_act_server ir_act_server @relation("rel_server_actions_action_idToir_act_server", fields: [action_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_act_server_rel_server_actions_server_idToir_act_server ir_act_server @relation("rel_server_actions_server_idToir_act_server", fields: [server_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([server_id, action_id])
  @@index([action_id, server_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model report_layout {
  id                                            Int                    @id @default(autoincrement())
  view_id                                       Int
  sequence                                      Int?
  create_uid                                    Int?
  write_uid                                     Int?
  image                                         String?                @db.VarChar
  pdf                                           String?                @db.VarChar
  name                                          String?                @db.VarChar
  create_date                                   DateTime?              @db.Timestamp(6)
  write_date                                    DateTime?              @db.Timestamp(6)
  base_document_layout                          base_document_layout[]
  res_users_report_layout_create_uidTores_users res_users?             @relation("report_layout_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view                                    ir_ui_view             @relation(fields: [view_id], references: [id], onUpdate: NoAction)
  res_users_report_layout_write_uidTores_users  res_users?             @relation("report_layout_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model report_paperformat {
  id                                                 Int                 @id @default(autoincrement())
  page_height                                        Int?
  page_width                                         Int?
  header_spacing                                     Int?
  dpi                                                Int
  create_uid                                         Int?
  write_uid                                          Int?
  name                                               String              @db.VarChar
  format                                             String?             @db.VarChar
  orientation                                        String?             @db.VarChar
  default                                            Boolean?
  header_line                                        Boolean?
  disable_shrinking                                  Boolean?
  css_margins                                        Boolean?
  create_date                                        DateTime?           @db.Timestamp(6)
  write_date                                         DateTime?           @db.Timestamp(6)
  margin_top                                         Float?
  margin_bottom                                      Float?
  margin_left                                        Float?
  margin_right                                       Float?
  ir_act_report_xml                                  ir_act_report_xml[]
  res_users_report_paperformat_create_uidTores_users res_users?          @relation("report_paperformat_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_report_paperformat_write_uidTores_users  res_users?          @relation("report_paperformat_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_company                                        res_company[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_bank {
  id                                       Int                @id @default(autoincrement())
  state                                    Int?
  country                                  Int?
  create_uid                               Int?
  write_uid                                Int?
  name                                     String             @db.VarChar
  street                                   String?            @db.VarChar
  street2                                  String?            @db.VarChar
  zip                                      String?            @db.VarChar
  city                                     String?            @db.VarChar
  email                                    String?            @db.VarChar
  phone                                    String?            @db.VarChar
  bic                                      String?            @db.VarChar
  active                                   Boolean?
  create_date                              DateTime?          @db.Timestamp(6)
  write_date                               DateTime?          @db.Timestamp(6)
  res_country                              res_country?       @relation(fields: [country], references: [id], onUpdate: NoAction)
  res_users_res_bank_create_uidTores_users res_users?         @relation("res_bank_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_country_state                        res_country_state? @relation(fields: [state], references: [id], onUpdate: NoAction)
  res_users_res_bank_write_uidTores_users  res_users?         @relation("res_bank_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_partner_bank                         res_partner_bank[]

  @@index([bic], map: "res_bank__bic_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_company {
  id                                              Int                           @id @default(autoincrement())
  name                                            String                        @unique(map: "res_company_name_uniq") @db.VarChar
  partner_id                                      Int
  currency_id                                     Int
  sequence                                        Int?
  create_date                                     DateTime?                     @db.Timestamp(6)
  parent_path                                     String?                       @db.VarChar
  parent_id                                       Int?
  paperformat_id                                  Int?
  external_report_layout_id                       Int?
  create_uid                                      Int?
  write_uid                                       Int?
  email                                           String?                       @db.VarChar
  phone                                           String?                       @db.VarChar
  mobile                                          String?                       @db.VarChar
  font                                            String?                       @db.VarChar
  primary_color                                   String?                       @db.VarChar
  secondary_color                                 String?                       @db.VarChar
  layout_background                               String                        @db.VarChar
  report_header                                   Json?
  report_footer                                   Json?
  company_details                                 Json?
  active                                          Boolean?
  uses_default_logo                               Boolean?
  write_date                                      DateTime?                     @db.Timestamp(6)
  logo_web                                        Bytes?
  base_document_layout                            base_document_layout[]
  iap_account_res_company_rel                     iap_account_res_company_rel[]
  ir_attachment                                   ir_attachment[]
  ir_default                                      ir_default[]
  ir_sequence                                     ir_sequence[]
  res_users_res_company_create_uidTores_users     res_users?                    @relation("res_company_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_currency                                    res_currency                  @relation(fields: [currency_id], references: [id], onUpdate: NoAction)
  ir_ui_view                                      ir_ui_view?                   @relation(fields: [external_report_layout_id], references: [id], onUpdate: NoAction)
  report_paperformat                              report_paperformat?           @relation(fields: [paperformat_id], references: [id], onUpdate: NoAction)
  res_company                                     res_company?                  @relation("res_companyTores_company", fields: [parent_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  other_res_company                               res_company[]                 @relation("res_companyTores_company")
  res_partner_res_company_partner_idTores_partner res_partner                   @relation("res_company_partner_idTores_partner", fields: [partner_id], references: [id], onUpdate: NoAction)
  res_users_res_company_write_uidTores_users      res_users?                    @relation("res_company_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_company_users_rel                           res_company_users_rel[]
  res_config_settings                             res_config_settings[]
  res_currency_rate                               res_currency_rate[]
  res_partner_res_partner_company_idTores_company res_partner[]                 @relation("res_partner_company_idTores_company")
  res_partner_bank                                res_partner_bank[]
  res_users_res_users_company_idTores_company     res_users[]                   @relation("res_users_company_idTores_company")

  @@index([parent_id], map: "res_company__parent_id_index")
  @@index([parent_path], map: "res_company__parent_path_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_company_users_rel {
  cid         Int
  user_id     Int
  res_company res_company @relation(fields: [cid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users   res_users   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([cid, user_id])
  @@index([user_id, cid])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_config {
  id                                         Int        @id @default(autoincrement())
  create_uid                                 Int?
  write_uid                                  Int?
  create_date                                DateTime?  @db.Timestamp(6)
  write_date                                 DateTime?  @db.Timestamp(6)
  res_users_res_config_create_uidTores_users res_users? @relation("res_config_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_config_write_uidTores_users  res_users? @relation("res_config_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_config_settings {
  id                                                  Int         @id @default(autoincrement())
  create_uid                                          Int?
  write_uid                                           Int?
  create_date                                         DateTime?   @db.Timestamp(6)
  write_date                                          DateTime?   @db.Timestamp(6)
  web_app_name                                        String?     @db.VarChar
  company_id                                          Int
  user_default_rights                                 Boolean?
  module_base_import                                  Boolean?
  module_google_calendar                              Boolean?
  module_microsoft_calendar                           Boolean?
  module_mail_plugin                                  Boolean?
  module_auth_oauth                                   Boolean?
  module_auth_ldap                                    Boolean?
  module_account_inter_company_rules                  Boolean?
  module_voip                                         Boolean?
  module_web_unsplash                                 Boolean?
  module_sms                                          Boolean?
  module_partner_autocomplete                         Boolean?
  module_base_geolocalize                             Boolean?
  module_google_recaptcha                             Boolean?
  module_website_cf_turnstile                         Boolean?
  group_multi_currency                                Boolean?
  show_effect                                         Boolean?
  module_product_images                               Boolean?
  profiling_enabled_until                             DateTime?   @db.Timestamp(6)
  unsplash_access_key                                 String?     @db.VarChar
  unsplash_app_id                                     String?     @db.VarChar
  res_company                                         res_company @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_res_config_settings_create_uidTores_users res_users?  @relation("res_config_settings_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_config_settings_write_uidTores_users  res_users?  @relation("res_config_settings_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_country {
  id                                          Int                                 @id @default(autoincrement())
  address_view_id                             Int?
  currency_id                                 Int?
  phone_code                                  Int?
  create_uid                                  Int?
  write_uid                                   Int?
  code                                        String                              @unique(map: "res_country_code_uniq") @db.VarChar(2)
  name_position                               String?                             @db.VarChar
  name                                        Json                                @unique(map: "res_country_name_uniq")
  vat_label                                   Json?
  address_format                              String?
  state_required                              Boolean?
  zip_required                                Boolean?
  create_date                                 DateTime?                           @db.Timestamp(6)
  write_date                                  DateTime?                           @db.Timestamp(6)
  module_country                              module_country[]
  res_bank                                    res_bank[]
  ir_ui_view                                  ir_ui_view?                         @relation(fields: [address_view_id], references: [id], onUpdate: NoAction)
  res_users_res_country_create_uidTores_users res_users?                          @relation("res_country_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_currency                                res_currency?                       @relation(fields: [currency_id], references: [id], onUpdate: NoAction)
  res_users_res_country_write_uidTores_users  res_users?                          @relation("res_country_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_country_res_country_group_rel           res_country_res_country_group_rel[]
  res_country_state                           res_country_state[]
  res_partner                                 res_partner[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_country_group {
  id                                                Int                                 @id @default(autoincrement())
  create_uid                                        Int?
  write_uid                                         Int?
  name                                              Json
  create_date                                       DateTime?                           @db.Timestamp(6)
  write_date                                        DateTime?                           @db.Timestamp(6)
  res_users_res_country_group_create_uidTores_users res_users?                          @relation("res_country_group_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_country_group_write_uidTores_users  res_users?                          @relation("res_country_group_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_country_res_country_group_rel                 res_country_res_country_group_rel[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_country_res_country_group_rel {
  res_country_id       Int
  res_country_group_id Int
  res_country_group    res_country_group @relation(fields: [res_country_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_country          res_country       @relation(fields: [res_country_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([res_country_id, res_country_group_id])
  @@index([res_country_group_id, res_country_id], map: "res_country_res_country_group_res_country_group_id_res_coun_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_country_state {
  id                                                Int           @id @default(autoincrement())
  country_id                                        Int
  create_uid                                        Int?
  write_uid                                         Int?
  name                                              String        @db.VarChar
  code                                              String        @db.VarChar
  create_date                                       DateTime?     @db.Timestamp(6)
  write_date                                        DateTime?     @db.Timestamp(6)
  res_bank                                          res_bank[]
  res_country                                       res_country   @relation(fields: [country_id], references: [id], onUpdate: NoAction)
  res_users_res_country_state_create_uidTores_users res_users?    @relation("res_country_state_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_country_state_write_uidTores_users  res_users?    @relation("res_country_state_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_partner                                       res_partner[]

  @@unique([country_id, code], map: "res_country_state_name_code_uniq")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_currency {
  id                                           Int                 @id @default(autoincrement())
  name                                         String              @unique(map: "res_currency_unique_name") @db.VarChar
  symbol                                       String              @db.VarChar
  iso_numeric                                  Int?
  decimal_places                               Int?
  create_uid                                   Int?
  write_uid                                    Int?
  full_name                                    String?             @db.VarChar
  position                                     String?             @db.VarChar
  currency_unit_label                          Json?
  currency_subunit_label                       Json?
  rounding                                     Decimal?            @db.Decimal
  active                                       Boolean?
  create_date                                  DateTime?           @db.Timestamp(6)
  write_date                                   DateTime?           @db.Timestamp(6)
  res_company                                  res_company[]
  res_country                                  res_country[]
  res_users_res_currency_create_uidTores_users res_users?          @relation("res_currency_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_currency_write_uidTores_users  res_users?          @relation("res_currency_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_currency_rate                            res_currency_rate[]
  res_partner_bank                             res_partner_bank[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_currency_rate {
  id                                                Int          @id @default(autoincrement())
  currency_id                                       Int
  company_id                                        Int?
  create_uid                                        Int?
  write_uid                                         Int?
  name                                              DateTime     @db.Date
  rate                                              Decimal?     @db.Decimal
  create_date                                       DateTime?    @db.Timestamp(6)
  write_date                                        DateTime?    @db.Timestamp(6)
  res_company                                       res_company? @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  res_users_res_currency_rate_create_uidTores_users res_users?   @relation("res_currency_rate_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_currency                                      res_currency @relation(fields: [currency_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_res_currency_rate_write_uidTores_users  res_users?   @relation("res_currency_rate_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([name, currency_id, company_id], map: "res_currency_rate_unique_name_per_day")
  @@index([name], map: "res_currency_rate__name_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_device_log {
  id                                             Int        @id @default(autoincrement())
  user_id                                        Int?
  create_uid                                     Int?
  write_uid                                      Int?
  session_identifier                             String     @db.VarChar
  platform                                       String?    @db.VarChar
  browser                                        String?    @db.VarChar
  ip_address                                     String?    @db.VarChar
  country                                        String?    @db.VarChar
  city                                           String?    @db.VarChar
  device_type                                    String?    @db.VarChar
  revoked                                        Boolean?
  first_activity                                 DateTime?  @db.Timestamp(6)
  last_activity                                  DateTime?  @db.Timestamp(6)
  create_date                                    DateTime?  @db.Timestamp(6)
  write_date                                     DateTime?  @db.Timestamp(6)
  res_users_res_device_log_create_uidTores_users res_users? @relation("res_device_log_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_device_log_user_idTores_users    res_users? @relation("res_device_log_user_idTores_users", fields: [user_id], references: [id], onUpdate: NoAction)
  res_users_res_device_log_write_uidTores_users  res_users? @relation("res_device_log_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([last_activity], map: "res_device_log__last_activity_index")
  @@index([session_identifier], map: "res_device_log__session_identifier_index")
  @@index([user_id], map: "res_device_log__user_id_index")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_groups {
  id                                                            Int                                  @id @default(autoincrement())
  name                                                          Json
  category_id                                                   Int?
  color                                                         Int?
  create_uid                                                    Int?
  write_uid                                                     Int?
  comment                                                       Json?
  share                                                         Boolean?
  create_date                                                   DateTime?                            @db.Timestamp(6)
  write_date                                                    DateTime?                            @db.Timestamp(6)
  api_key_duration                                              Float?
  ir_act_server_group_rel                                       ir_act_server_group_rel[]
  ir_act_window_group_rel                                       ir_act_window_group_rel[]
  ir_embedded_actions_res_groups_rel                            ir_embedded_actions_res_groups_rel[]
  ir_model_access                                               ir_model_access[]
  ir_model_fields_group_rel                                     ir_model_fields_group_rel[]
  ir_ui_menu_group_rel                                          ir_ui_menu_group_rel[]
  ir_ui_view_group_rel                                          ir_ui_view_group_rel[]
  ir_module_category                                            ir_module_category?                  @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  res_users_res_groups_create_uidTores_users                    res_users?                           @relation("res_groups_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_groups_write_uidTores_users                     res_users?                           @relation("res_groups_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_groups_implied_rel_res_groups_implied_rel_gidTores_groups res_groups_implied_rel[]             @relation("res_groups_implied_rel_gidTores_groups")
  res_groups_implied_rel_res_groups_implied_rel_hidTores_groups res_groups_implied_rel[]             @relation("res_groups_implied_rel_hidTores_groups")
  res_groups_report_rel                                         res_groups_report_rel[]
  res_groups_users_rel                                          res_groups_users_rel[]
  rule_group_rel                                                rule_group_rel[]

  @@unique([category_id, name], map: "res_groups_name_uniq")
  @@index([category_id], map: "res_groups__category_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_groups_implied_rel {
  gid                                               Int
  hid                                               Int
  res_groups_res_groups_implied_rel_gidTores_groups res_groups @relation("res_groups_implied_rel_gidTores_groups", fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_groups_res_groups_implied_rel_hidTores_groups res_groups @relation("res_groups_implied_rel_hidTores_groups", fields: [hid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([gid, hid])
  @@index([hid, gid])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_groups_report_rel {
  uid               Int
  gid               Int
  res_groups        res_groups        @relation(fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_act_report_xml ir_act_report_xml @relation(fields: [uid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([uid, gid])
  @@index([gid, uid])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_groups_users_rel {
  gid        Int
  uid        Int
  res_groups res_groups @relation(fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users  res_users  @relation(fields: [uid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([gid, uid])
  @@index([uid, gid])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_lang {
  id                                       Int                    @id @default(autoincrement())
  create_uid                               Int?
  write_uid                                Int?
  name                                     String                 @unique(map: "res_lang_name_uniq") @db.VarChar
  code                                     String                 @unique(map: "res_lang_code_uniq") @db.VarChar
  iso_code                                 String?                @db.VarChar
  url_code                                 String                 @unique(map: "res_lang_url_code_uniq") @db.VarChar
  direction                                String                 @db.VarChar
  date_format                              String                 @db.VarChar
  time_format                              String                 @db.VarChar
  short_time_format                        String                 @db.VarChar
  week_start                               String                 @db.VarChar
  grouping                                 String                 @db.VarChar
  decimal_point                            String                 @db.VarChar
  thousands_sep                            String?                @db.VarChar
  active                                   Boolean?
  create_date                              DateTime?              @db.Timestamp(6)
  write_date                               DateTime?              @db.Timestamp(6)
  res_users_res_lang_create_uidTores_users res_users?             @relation("res_lang_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_lang_write_uidTores_users  res_users?             @relation("res_lang_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_lang_install_rel                     res_lang_install_rel[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_lang_install_rel {
  language_wizard_id    Int
  lang_id               Int
  res_lang              res_lang              @relation(fields: [lang_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  base_language_install base_language_install @relation(fields: [language_wizard_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([language_wizard_id, lang_id])
  @@index([lang_id, language_wizard_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_partner {
  id                                                               Int                                                   @id @default(autoincrement())
  company_id                                                       Int?
  create_date                                                      DateTime?                                             @db.Timestamp(6)
  name                                                             String?                                               @db.VarChar
  title                                                            Int?
  parent_id                                                        Int?
  user_id                                                          Int?
  state_id                                                         Int?
  country_id                                                       Int?
  industry_id                                                      Int?
  color                                                            Int?
  commercial_partner_id                                            Int?
  create_uid                                                       Int?
  write_uid                                                        Int?
  complete_name                                                    String?                                               @db.VarChar
  ref                                                              String?                                               @db.VarChar
  lang                                                             String?                                               @db.VarChar
  tz                                                               String?                                               @db.VarChar
  vat                                                              String?                                               @db.VarChar
  company_registry                                                 String?                                               @db.VarChar
  website                                                          String?                                               @db.VarChar
  function                                                         String?                                               @db.VarChar
  type                                                             String?                                               @db.VarChar
  street                                                           String?                                               @db.VarChar
  street2                                                          String?                                               @db.VarChar
  zip                                                              String?                                               @db.VarChar
  city                                                             String?                                               @db.VarChar
  email                                                            String?                                               @db.VarChar
  phone                                                            String?                                               @db.VarChar
  mobile                                                           String?                                               @db.VarChar
  commercial_company_name                                          String?                                               @db.VarChar
  company_name                                                     String?                                               @db.VarChar
  barcode                                                          Json?
  comment                                                          String?
  partner_latitude                                                 Decimal?                                              @db.Decimal
  partner_longitude                                                Decimal?                                              @db.Decimal
  active                                                           Boolean?
  employee                                                         Boolean?
  is_company                                                       Boolean?
  partner_share                                                    Boolean?
  write_date                                                       DateTime?                                             @db.Timestamp(6)
  base_partner_merge_automatic_wizard                              base_partner_merge_automatic_wizard[]
  base_partner_merge_automatic_wizard_res_partner_rel              base_partner_merge_automatic_wizard_res_partner_rel[]
  res_company_res_company_partner_idTores_partner                  res_company[]                                         @relation("res_company_partner_idTores_partner")
  res_partner_res_partner_commercial_partner_idTores_partner       res_partner?                                          @relation("res_partner_commercial_partner_idTores_partner", fields: [commercial_partner_id], references: [id], onUpdate: NoAction)
  other_res_partner_res_partner_commercial_partner_idTores_partner res_partner[]                                         @relation("res_partner_commercial_partner_idTores_partner")
  res_company_res_partner_company_idTores_company                  res_company?                                          @relation("res_partner_company_idTores_company", fields: [company_id], references: [id], onUpdate: NoAction)
  res_country                                                      res_country?                                          @relation(fields: [country_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  res_users_res_partner_create_uidTores_users                      res_users?                                            @relation("res_partner_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_partner_industry                                             res_partner_industry?                                 @relation(fields: [industry_id], references: [id], onUpdate: NoAction)
  res_partner_res_partner_parent_idTores_partner                   res_partner?                                          @relation("res_partner_parent_idTores_partner", fields: [parent_id], references: [id], onUpdate: NoAction)
  other_res_partner_res_partner_parent_idTores_partner             res_partner[]                                         @relation("res_partner_parent_idTores_partner")
  res_country_state                                                res_country_state?                                    @relation(fields: [state_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  res_partner_title                                                res_partner_title?                                    @relation(fields: [title], references: [id], onUpdate: NoAction)
  res_users_res_partner_user_idTores_users                         res_users?                                            @relation("res_partner_user_idTores_users", fields: [user_id], references: [id], onUpdate: NoAction)
  res_users_res_partner_write_uidTores_users                       res_users?                                            @relation("res_partner_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_partner_bank                                                 res_partner_bank[]
  res_partner_res_partner_category_rel                             res_partner_res_partner_category_rel[]
  res_users_res_users_partner_idTores_partner                      res_users[]                                           @relation("res_users_partner_idTores_partner")

  @@index([commercial_partner_id], map: "res_partner__commercial_partner_id_index")
  @@index([company_id], map: "res_partner__company_id_index")
  @@index([complete_name], map: "res_partner__complete_name_index")
  @@index([name], map: "res_partner__name_index")
  @@index([parent_id], map: "res_partner__parent_id_index")
  @@index([ref], map: "res_partner__ref_index")
  @@index([vat], map: "res_partner__vat_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_partner_bank {
  id                                               Int           @id @default(autoincrement())
  partner_id                                       Int
  bank_id                                          Int?
  sequence                                         Int?
  currency_id                                      Int?
  company_id                                       Int?
  create_uid                                       Int?
  write_uid                                        Int?
  acc_number                                       String        @db.VarChar
  sanitized_acc_number                             String?       @db.VarChar
  acc_holder_name                                  String?       @db.VarChar
  active                                           Boolean?
  allow_out_payment                                Boolean?
  create_date                                      DateTime?     @db.Timestamp(6)
  write_date                                       DateTime?     @db.Timestamp(6)
  res_bank                                         res_bank?     @relation(fields: [bank_id], references: [id], onUpdate: NoAction)
  res_company                                      res_company?  @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  res_users_res_partner_bank_create_uidTores_users res_users?    @relation("res_partner_bank_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_currency                                     res_currency? @relation(fields: [currency_id], references: [id], onUpdate: NoAction)
  res_partner                                      res_partner   @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_res_partner_bank_write_uidTores_users  res_users?    @relation("res_partner_bank_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([sanitized_acc_number, partner_id], map: "res_partner_bank_unique_number")
  @@index([partner_id], map: "res_partner_bank__partner_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_partner_category {
  id                                                   Int                                    @id @default(autoincrement())
  color                                                Int?
  parent_id                                            Int?
  create_uid                                           Int?
  write_uid                                            Int?
  parent_path                                          String?                                @db.VarChar
  name                                                 Json
  active                                               Boolean?
  create_date                                          DateTime?                              @db.Timestamp(6)
  write_date                                           DateTime?                              @db.Timestamp(6)
  res_users_res_partner_category_create_uidTores_users res_users?                             @relation("res_partner_category_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_partner_category                                 res_partner_category?                  @relation("res_partner_categoryTores_partner_category", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_res_partner_category                           res_partner_category[]                 @relation("res_partner_categoryTores_partner_category")
  res_users_res_partner_category_write_uidTores_users  res_users?                             @relation("res_partner_category_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_partner_res_partner_category_rel                 res_partner_res_partner_category_rel[]

  @@index([parent_id], map: "res_partner_category__parent_id_index")
  @@index([parent_path], map: "res_partner_category__parent_path_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_partner_industry {
  id                                                   Int           @id @default(autoincrement())
  create_uid                                           Int?
  write_uid                                            Int?
  name                                                 Json?
  full_name                                            Json?
  active                                               Boolean?
  create_date                                          DateTime?     @db.Timestamp(6)
  write_date                                           DateTime?     @db.Timestamp(6)
  res_partner                                          res_partner[]
  res_users_res_partner_industry_create_uidTores_users res_users?    @relation("res_partner_industry_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_partner_industry_write_uidTores_users  res_users?    @relation("res_partner_industry_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_partner_res_partner_category_rel {
  category_id          Int
  partner_id           Int
  res_partner_category res_partner_category @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_partner          res_partner          @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([category_id, partner_id])
  @@index([partner_id, category_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_partner_title {
  id                                                Int           @id @default(autoincrement())
  create_uid                                        Int?
  write_uid                                         Int?
  name                                              Json
  shortcut                                          Json?
  create_date                                       DateTime?     @db.Timestamp(6)
  write_date                                        DateTime?     @db.Timestamp(6)
  res_partner                                       res_partner[]
  res_users_res_partner_title_create_uidTores_users res_users?    @relation("res_partner_title_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_partner_title_write_uidTores_users  res_users?    @relation("res_partner_title_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_users {
  id                                                                                            Int                                   @id @default(autoincrement())
  company_id                                                                                    Int
  partner_id                                                                                    Int
  active                                                                                        Boolean?                              @default(true)
  create_date                                                                                   DateTime?                             @db.Timestamp(6)
  login                                                                                         String                                @unique @db.VarChar
  password                                                                                      String?                               @db.VarChar
  action_id                                                                                     Int?
  create_uid                                                                                    Int?
  write_uid                                                                                     Int?
  signature                                                                                     String?
  share                                                                                         Boolean?
  write_date                                                                                    DateTime?                             @db.Timestamp(6)
  totp_secret                                                                                   String?                               @db.VarChar
  tour_enabled                                                                                  Boolean?
  auth_totp_device                                                                              auth_totp_device[]
  auth_totp_wizard_auth_totp_wizard_create_uidTores_users                                       auth_totp_wizard[]                    @relation("auth_totp_wizard_create_uidTores_users")
  auth_totp_wizard_auth_totp_wizard_user_idTores_users                                          auth_totp_wizard[]                    @relation("auth_totp_wizard_user_idTores_users")
  auth_totp_wizard_auth_totp_wizard_write_uidTores_users                                        auth_totp_wizard[]                    @relation("auth_totp_wizard_write_uidTores_users")
  base_document_layout_base_document_layout_create_uidTores_users                               base_document_layout[]                @relation("base_document_layout_create_uidTores_users")
  base_document_layout_base_document_layout_write_uidTores_users                                base_document_layout[]                @relation("base_document_layout_write_uidTores_users")
  base_enable_profiling_wizard_base_enable_profiling_wizard_create_uidTores_users               base_enable_profiling_wizard[]        @relation("base_enable_profiling_wizard_create_uidTores_users")
  base_enable_profiling_wizard_base_enable_profiling_wizard_write_uidTores_users                base_enable_profiling_wizard[]        @relation("base_enable_profiling_wizard_write_uidTores_users")
  base_import_import_base_import_import_create_uidTores_users                                   base_import_import[]                  @relation("base_import_import_create_uidTores_users")
  base_import_import_base_import_import_write_uidTores_users                                    base_import_import[]                  @relation("base_import_import_write_uidTores_users")
  base_import_mapping_base_import_mapping_create_uidTores_users                                 base_import_mapping[]                 @relation("base_import_mapping_create_uidTores_users")
  base_import_mapping_base_import_mapping_write_uidTores_users                                  base_import_mapping[]                 @relation("base_import_mapping_write_uidTores_users")
  base_import_module_base_import_module_create_uidTores_users                                   base_import_module[]                  @relation("base_import_module_create_uidTores_users")
  base_import_module_base_import_module_write_uidTores_users                                    base_import_module[]                  @relation("base_import_module_write_uidTores_users")
  base_language_export_base_language_export_create_uidTores_users                               base_language_export[]                @relation("base_language_export_create_uidTores_users")
  base_language_export_base_language_export_write_uidTores_users                                base_language_export[]                @relation("base_language_export_write_uidTores_users")
  base_language_import_base_language_import_create_uidTores_users                               base_language_import[]                @relation("base_language_import_create_uidTores_users")
  base_language_import_base_language_import_write_uidTores_users                                base_language_import[]                @relation("base_language_import_write_uidTores_users")
  base_language_install_base_language_install_create_uidTores_users                             base_language_install[]               @relation("base_language_install_create_uidTores_users")
  base_language_install_base_language_install_write_uidTores_users                              base_language_install[]               @relation("base_language_install_write_uidTores_users")
  base_module_uninstall_base_module_uninstall_create_uidTores_users                             base_module_uninstall[]               @relation("base_module_uninstall_create_uidTores_users")
  base_module_uninstall_base_module_uninstall_write_uidTores_users                              base_module_uninstall[]               @relation("base_module_uninstall_write_uidTores_users")
  base_module_update_base_module_update_create_uidTores_users                                   base_module_update[]                  @relation("base_module_update_create_uidTores_users")
  base_module_update_base_module_update_write_uidTores_users                                    base_module_update[]                  @relation("base_module_update_write_uidTores_users")
  base_module_upgrade_base_module_upgrade_create_uidTores_users                                 base_module_upgrade[]                 @relation("base_module_upgrade_create_uidTores_users")
  base_module_upgrade_base_module_upgrade_write_uidTores_users                                  base_module_upgrade[]                 @relation("base_module_upgrade_write_uidTores_users")
  base_partner_merge_automatic_wizard_base_partner_merge_automatic_wizard_create_uidTores_users base_partner_merge_automatic_wizard[] @relation("base_partner_merge_automatic_wizard_create_uidTores_users")
  base_partner_merge_automatic_wizard_base_partner_merge_automatic_wizard_write_uidTores_users  base_partner_merge_automatic_wizard[] @relation("base_partner_merge_automatic_wizard_write_uidTores_users")
  base_partner_merge_line_base_partner_merge_line_create_uidTores_users                         base_partner_merge_line[]             @relation("base_partner_merge_line_create_uidTores_users")
  base_partner_merge_line_base_partner_merge_line_write_uidTores_users                          base_partner_merge_line[]             @relation("base_partner_merge_line_write_uidTores_users")
  bus_bus_bus_bus_create_uidTores_users                                                         bus_bus[]                             @relation("bus_bus_create_uidTores_users")
  bus_bus_bus_bus_write_uidTores_users                                                          bus_bus[]                             @relation("bus_bus_write_uidTores_users")
  bus_presence                                                                                  bus_presence[]
  change_password_own_change_password_own_create_uidTores_users                                 change_password_own[]                 @relation("change_password_own_create_uidTores_users")
  change_password_own_change_password_own_write_uidTores_users                                  change_password_own[]                 @relation("change_password_own_write_uidTores_users")
  change_password_user_change_password_user_create_uidTores_users                               change_password_user[]                @relation("change_password_user_create_uidTores_users")
  change_password_user_change_password_user_user_idTores_users                                  change_password_user[]                @relation("change_password_user_user_idTores_users")
  change_password_user_change_password_user_write_uidTores_users                                change_password_user[]                @relation("change_password_user_write_uidTores_users")
  change_password_wizard_change_password_wizard_create_uidTores_users                           change_password_wizard[]              @relation("change_password_wizard_create_uidTores_users")
  change_password_wizard_change_password_wizard_write_uidTores_users                            change_password_wizard[]              @relation("change_password_wizard_write_uidTores_users")
  decimal_precision_decimal_precision_create_uidTores_users                                     decimal_precision[]                   @relation("decimal_precision_create_uidTores_users")
  decimal_precision_decimal_precision_write_uidTores_users                                      decimal_precision[]                   @relation("decimal_precision_write_uidTores_users")
  iap_account_iap_account_create_uidTores_users                                                 iap_account[]                         @relation("iap_account_create_uidTores_users")
  iap_account_iap_account_write_uidTores_users                                                  iap_account[]                         @relation("iap_account_write_uidTores_users")
  iap_account_res_users_rel                                                                     iap_account_res_users_rel[]
  iap_service_iap_service_create_uidTores_users                                                 iap_service[]                         @relation("iap_service_create_uidTores_users")
  iap_service_iap_service_write_uidTores_users                                                  iap_service[]                         @relation("iap_service_write_uidTores_users")
  ir_act_client_ir_act_client_create_uidTores_users                                             ir_act_client[]                       @relation("ir_act_client_create_uidTores_users")
  ir_act_client_ir_act_client_write_uidTores_users                                              ir_act_client[]                       @relation("ir_act_client_write_uidTores_users")
  ir_act_report_xml_ir_act_report_xml_create_uidTores_users                                     ir_act_report_xml[]                   @relation("ir_act_report_xml_create_uidTores_users")
  ir_act_report_xml_ir_act_report_xml_write_uidTores_users                                      ir_act_report_xml[]                   @relation("ir_act_report_xml_write_uidTores_users")
  ir_act_server_ir_act_server_create_uidTores_users                                             ir_act_server[]                       @relation("ir_act_server_create_uidTores_users")
  ir_act_server_ir_act_server_write_uidTores_users                                              ir_act_server[]                       @relation("ir_act_server_write_uidTores_users")
  ir_act_url_ir_act_url_create_uidTores_users                                                   ir_act_url[]                          @relation("ir_act_url_create_uidTores_users")
  ir_act_url_ir_act_url_write_uidTores_users                                                    ir_act_url[]                          @relation("ir_act_url_write_uidTores_users")
  ir_act_window_ir_act_window_create_uidTores_users                                             ir_act_window[]                       @relation("ir_act_window_create_uidTores_users")
  ir_act_window_ir_act_window_write_uidTores_users                                              ir_act_window[]                       @relation("ir_act_window_write_uidTores_users")
  ir_act_window_view_ir_act_window_view_create_uidTores_users                                   ir_act_window_view[]                  @relation("ir_act_window_view_create_uidTores_users")
  ir_act_window_view_ir_act_window_view_write_uidTores_users                                    ir_act_window_view[]                  @relation("ir_act_window_view_write_uidTores_users")
  ir_actions_ir_actions_create_uidTores_users                                                   ir_actions[]                          @relation("ir_actions_create_uidTores_users")
  ir_actions_ir_actions_write_uidTores_users                                                    ir_actions[]                          @relation("ir_actions_write_uidTores_users")
  ir_actions_todo_ir_actions_todo_create_uidTores_users                                         ir_actions_todo[]                     @relation("ir_actions_todo_create_uidTores_users")
  ir_actions_todo_ir_actions_todo_write_uidTores_users                                          ir_actions_todo[]                     @relation("ir_actions_todo_write_uidTores_users")
  ir_asset_ir_asset_create_uidTores_users                                                       ir_asset[]                            @relation("ir_asset_create_uidTores_users")
  ir_asset_ir_asset_write_uidTores_users                                                        ir_asset[]                            @relation("ir_asset_write_uidTores_users")
  ir_attachment_ir_attachment_create_uidTores_users                                             ir_attachment[]                       @relation("ir_attachment_create_uidTores_users")
  ir_attachment_ir_attachment_write_uidTores_users                                              ir_attachment[]                       @relation("ir_attachment_write_uidTores_users")
  ir_config_parameter_ir_config_parameter_create_uidTores_users                                 ir_config_parameter[]                 @relation("ir_config_parameter_create_uidTores_users")
  ir_config_parameter_ir_config_parameter_write_uidTores_users                                  ir_config_parameter[]                 @relation("ir_config_parameter_write_uidTores_users")
  ir_cron_ir_cron_create_uidTores_users                                                         ir_cron[]                             @relation("ir_cron_create_uidTores_users")
  ir_cron_ir_cron_user_idTores_users                                                            ir_cron[]                             @relation("ir_cron_user_idTores_users")
  ir_cron_ir_cron_write_uidTores_users                                                          ir_cron[]                             @relation("ir_cron_write_uidTores_users")
  ir_cron_progress_ir_cron_progress_create_uidTores_users                                       ir_cron_progress[]                    @relation("ir_cron_progress_create_uidTores_users")
  ir_cron_progress_ir_cron_progress_write_uidTores_users                                        ir_cron_progress[]                    @relation("ir_cron_progress_write_uidTores_users")
  ir_cron_trigger_ir_cron_trigger_create_uidTores_users                                         ir_cron_trigger[]                     @relation("ir_cron_trigger_create_uidTores_users")
  ir_cron_trigger_ir_cron_trigger_write_uidTores_users                                          ir_cron_trigger[]                     @relation("ir_cron_trigger_write_uidTores_users")
  ir_default_ir_default_create_uidTores_users                                                   ir_default[]                          @relation("ir_default_create_uidTores_users")
  ir_default_ir_default_user_idTores_users                                                      ir_default[]                          @relation("ir_default_user_idTores_users")
  ir_default_ir_default_write_uidTores_users                                                    ir_default[]                          @relation("ir_default_write_uidTores_users")
  ir_demo_ir_demo_create_uidTores_users                                                         ir_demo[]                             @relation("ir_demo_create_uidTores_users")
  ir_demo_ir_demo_write_uidTores_users                                                          ir_demo[]                             @relation("ir_demo_write_uidTores_users")
  ir_demo_failure_ir_demo_failure_create_uidTores_users                                         ir_demo_failure[]                     @relation("ir_demo_failure_create_uidTores_users")
  ir_demo_failure_ir_demo_failure_write_uidTores_users                                          ir_demo_failure[]                     @relation("ir_demo_failure_write_uidTores_users")
  ir_demo_failure_wizard_ir_demo_failure_wizard_create_uidTores_users                           ir_demo_failure_wizard[]              @relation("ir_demo_failure_wizard_create_uidTores_users")
  ir_demo_failure_wizard_ir_demo_failure_wizard_write_uidTores_users                            ir_demo_failure_wizard[]              @relation("ir_demo_failure_wizard_write_uidTores_users")
  ir_embedded_actions_ir_embedded_actions_create_uidTores_users                                 ir_embedded_actions[]                 @relation("ir_embedded_actions_create_uidTores_users")
  ir_embedded_actions_ir_embedded_actions_user_idTores_users                                    ir_embedded_actions[]                 @relation("ir_embedded_actions_user_idTores_users")
  ir_embedded_actions_ir_embedded_actions_write_uidTores_users                                  ir_embedded_actions[]                 @relation("ir_embedded_actions_write_uidTores_users")
  ir_exports_ir_exports_create_uidTores_users                                                   ir_exports[]                          @relation("ir_exports_create_uidTores_users")
  ir_exports_ir_exports_write_uidTores_users                                                    ir_exports[]                          @relation("ir_exports_write_uidTores_users")
  ir_exports_line_ir_exports_line_create_uidTores_users                                         ir_exports_line[]                     @relation("ir_exports_line_create_uidTores_users")
  ir_exports_line_ir_exports_line_write_uidTores_users                                          ir_exports_line[]                     @relation("ir_exports_line_write_uidTores_users")
  ir_filters_ir_filters_create_uidTores_users                                                   ir_filters[]                          @relation("ir_filters_create_uidTores_users")
  ir_filters_ir_filters_user_idTores_users                                                      ir_filters[]                          @relation("ir_filters_user_idTores_users")
  ir_filters_ir_filters_write_uidTores_users                                                    ir_filters[]                          @relation("ir_filters_write_uidTores_users")
  ir_mail_server_ir_mail_server_create_uidTores_users                                           ir_mail_server[]                      @relation("ir_mail_server_create_uidTores_users")
  ir_mail_server_ir_mail_server_write_uidTores_users                                            ir_mail_server[]                      @relation("ir_mail_server_write_uidTores_users")
  ir_model_ir_model_create_uidTores_users                                                       ir_model[]                            @relation("ir_model_create_uidTores_users")
  ir_model_ir_model_write_uidTores_users                                                        ir_model[]                            @relation("ir_model_write_uidTores_users")
  ir_model_access_ir_model_access_create_uidTores_users                                         ir_model_access[]                     @relation("ir_model_access_create_uidTores_users")
  ir_model_access_ir_model_access_write_uidTores_users                                          ir_model_access[]                     @relation("ir_model_access_write_uidTores_users")
  ir_model_constraint_ir_model_constraint_create_uidTores_users                                 ir_model_constraint[]                 @relation("ir_model_constraint_create_uidTores_users")
  ir_model_constraint_ir_model_constraint_write_uidTores_users                                  ir_model_constraint[]                 @relation("ir_model_constraint_write_uidTores_users")
  ir_model_data_ir_model_data_create_uidTores_users                                             ir_model_data[]                       @relation("ir_model_data_create_uidTores_users")
  ir_model_data_ir_model_data_write_uidTores_users                                              ir_model_data[]                       @relation("ir_model_data_write_uidTores_users")
  ir_model_fields_ir_model_fields_create_uidTores_users                                         ir_model_fields[]                     @relation("ir_model_fields_create_uidTores_users")
  ir_model_fields_ir_model_fields_write_uidTores_users                                          ir_model_fields[]                     @relation("ir_model_fields_write_uidTores_users")
  ir_model_fields_selection_ir_model_fields_selection_create_uidTores_users                     ir_model_fields_selection[]           @relation("ir_model_fields_selection_create_uidTores_users")
  ir_model_fields_selection_ir_model_fields_selection_write_uidTores_users                      ir_model_fields_selection[]           @relation("ir_model_fields_selection_write_uidTores_users")
  ir_model_relation_ir_model_relation_create_uidTores_users                                     ir_model_relation[]                   @relation("ir_model_relation_create_uidTores_users")
  ir_model_relation_ir_model_relation_write_uidTores_users                                      ir_model_relation[]                   @relation("ir_model_relation_write_uidTores_users")
  ir_module_category_ir_module_category_create_uidTores_users                                   ir_module_category[]                  @relation("ir_module_category_create_uidTores_users")
  ir_module_category_ir_module_category_write_uidTores_users                                    ir_module_category[]                  @relation("ir_module_category_write_uidTores_users")
  ir_module_module_ir_module_module_create_uidTores_users                                       ir_module_module[]                    @relation("ir_module_module_create_uidTores_users")
  ir_module_module_ir_module_module_write_uidTores_users                                        ir_module_module[]                    @relation("ir_module_module_write_uidTores_users")
  ir_module_module_exclusion_ir_module_module_exclusion_create_uidTores_users                   ir_module_module_exclusion[]          @relation("ir_module_module_exclusion_create_uidTores_users")
  ir_module_module_exclusion_ir_module_module_exclusion_write_uidTores_users                    ir_module_module_exclusion[]          @relation("ir_module_module_exclusion_write_uidTores_users")
  ir_rule_ir_rule_create_uidTores_users                                                         ir_rule[]                             @relation("ir_rule_create_uidTores_users")
  ir_rule_ir_rule_write_uidTores_users                                                          ir_rule[]                             @relation("ir_rule_write_uidTores_users")
  ir_sequence_ir_sequence_create_uidTores_users                                                 ir_sequence[]                         @relation("ir_sequence_create_uidTores_users")
  ir_sequence_ir_sequence_write_uidTores_users                                                  ir_sequence[]                         @relation("ir_sequence_write_uidTores_users")
  ir_sequence_date_range_ir_sequence_date_range_create_uidTores_users                           ir_sequence_date_range[]              @relation("ir_sequence_date_range_create_uidTores_users")
  ir_sequence_date_range_ir_sequence_date_range_write_uidTores_users                            ir_sequence_date_range[]              @relation("ir_sequence_date_range_write_uidTores_users")
  ir_ui_menu_ir_ui_menu_create_uidTores_users                                                   ir_ui_menu[]                          @relation("ir_ui_menu_create_uidTores_users")
  ir_ui_menu_ir_ui_menu_write_uidTores_users                                                    ir_ui_menu[]                          @relation("ir_ui_menu_write_uidTores_users")
  ir_ui_view_ir_ui_view_create_uidTores_users                                                   ir_ui_view[]                          @relation("ir_ui_view_create_uidTores_users")
  ir_ui_view_ir_ui_view_write_uidTores_users                                                    ir_ui_view[]                          @relation("ir_ui_view_write_uidTores_users")
  ir_ui_view_custom_ir_ui_view_custom_create_uidTores_users                                     ir_ui_view_custom[]                   @relation("ir_ui_view_custom_create_uidTores_users")
  ir_ui_view_custom_ir_ui_view_custom_user_idTores_users                                        ir_ui_view_custom[]                   @relation("ir_ui_view_custom_user_idTores_users")
  ir_ui_view_custom_ir_ui_view_custom_write_uidTores_users                                      ir_ui_view_custom[]                   @relation("ir_ui_view_custom_write_uidTores_users")
  report_layout_report_layout_create_uidTores_users                                             report_layout[]                       @relation("report_layout_create_uidTores_users")
  report_layout_report_layout_write_uidTores_users                                              report_layout[]                       @relation("report_layout_write_uidTores_users")
  report_paperformat_report_paperformat_create_uidTores_users                                   report_paperformat[]                  @relation("report_paperformat_create_uidTores_users")
  report_paperformat_report_paperformat_write_uidTores_users                                    report_paperformat[]                  @relation("report_paperformat_write_uidTores_users")
  res_bank_res_bank_create_uidTores_users                                                       res_bank[]                            @relation("res_bank_create_uidTores_users")
  res_bank_res_bank_write_uidTores_users                                                        res_bank[]                            @relation("res_bank_write_uidTores_users")
  res_company_res_company_create_uidTores_users                                                 res_company[]                         @relation("res_company_create_uidTores_users")
  res_company_res_company_write_uidTores_users                                                  res_company[]                         @relation("res_company_write_uidTores_users")
  res_company_users_rel                                                                         res_company_users_rel[]
  res_config_res_config_create_uidTores_users                                                   res_config[]                          @relation("res_config_create_uidTores_users")
  res_config_res_config_write_uidTores_users                                                    res_config[]                          @relation("res_config_write_uidTores_users")
  res_config_settings_res_config_settings_create_uidTores_users                                 res_config_settings[]                 @relation("res_config_settings_create_uidTores_users")
  res_config_settings_res_config_settings_write_uidTores_users                                  res_config_settings[]                 @relation("res_config_settings_write_uidTores_users")
  res_country_res_country_create_uidTores_users                                                 res_country[]                         @relation("res_country_create_uidTores_users")
  res_country_res_country_write_uidTores_users                                                  res_country[]                         @relation("res_country_write_uidTores_users")
  res_country_group_res_country_group_create_uidTores_users                                     res_country_group[]                   @relation("res_country_group_create_uidTores_users")
  res_country_group_res_country_group_write_uidTores_users                                      res_country_group[]                   @relation("res_country_group_write_uidTores_users")
  res_country_state_res_country_state_create_uidTores_users                                     res_country_state[]                   @relation("res_country_state_create_uidTores_users")
  res_country_state_res_country_state_write_uidTores_users                                      res_country_state[]                   @relation("res_country_state_write_uidTores_users")
  res_currency_res_currency_create_uidTores_users                                               res_currency[]                        @relation("res_currency_create_uidTores_users")
  res_currency_res_currency_write_uidTores_users                                                res_currency[]                        @relation("res_currency_write_uidTores_users")
  res_currency_rate_res_currency_rate_create_uidTores_users                                     res_currency_rate[]                   @relation("res_currency_rate_create_uidTores_users")
  res_currency_rate_res_currency_rate_write_uidTores_users                                      res_currency_rate[]                   @relation("res_currency_rate_write_uidTores_users")
  res_device_log_res_device_log_create_uidTores_users                                           res_device_log[]                      @relation("res_device_log_create_uidTores_users")
  res_device_log_res_device_log_user_idTores_users                                              res_device_log[]                      @relation("res_device_log_user_idTores_users")
  res_device_log_res_device_log_write_uidTores_users                                            res_device_log[]                      @relation("res_device_log_write_uidTores_users")
  res_groups_res_groups_create_uidTores_users                                                   res_groups[]                          @relation("res_groups_create_uidTores_users")
  res_groups_res_groups_write_uidTores_users                                                    res_groups[]                          @relation("res_groups_write_uidTores_users")
  res_groups_users_rel                                                                          res_groups_users_rel[]
  res_lang_res_lang_create_uidTores_users                                                       res_lang[]                            @relation("res_lang_create_uidTores_users")
  res_lang_res_lang_write_uidTores_users                                                        res_lang[]                            @relation("res_lang_write_uidTores_users")
  res_partner_res_partner_create_uidTores_users                                                 res_partner[]                         @relation("res_partner_create_uidTores_users")
  res_partner_res_partner_user_idTores_users                                                    res_partner[]                         @relation("res_partner_user_idTores_users")
  res_partner_res_partner_write_uidTores_users                                                  res_partner[]                         @relation("res_partner_write_uidTores_users")
  res_partner_bank_res_partner_bank_create_uidTores_users                                       res_partner_bank[]                    @relation("res_partner_bank_create_uidTores_users")
  res_partner_bank_res_partner_bank_write_uidTores_users                                        res_partner_bank[]                    @relation("res_partner_bank_write_uidTores_users")
  res_partner_category_res_partner_category_create_uidTores_users                               res_partner_category[]                @relation("res_partner_category_create_uidTores_users")
  res_partner_category_res_partner_category_write_uidTores_users                                res_partner_category[]                @relation("res_partner_category_write_uidTores_users")
  res_partner_industry_res_partner_industry_create_uidTores_users                               res_partner_industry[]                @relation("res_partner_industry_create_uidTores_users")
  res_partner_industry_res_partner_industry_write_uidTores_users                                res_partner_industry[]                @relation("res_partner_industry_write_uidTores_users")
  res_partner_title_res_partner_title_create_uidTores_users                                     res_partner_title[]                   @relation("res_partner_title_create_uidTores_users")
  res_partner_title_res_partner_title_write_uidTores_users                                      res_partner_title[]                   @relation("res_partner_title_write_uidTores_users")
  res_company_res_users_company_idTores_company                                                 res_company                           @relation("res_users_company_idTores_company", fields: [company_id], references: [id], onUpdate: NoAction)
  res_users_res_users_create_uidTores_users                                                     res_users?                            @relation("res_users_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  other_res_users_res_users_create_uidTores_users                                               res_users[]                           @relation("res_users_create_uidTores_users")
  res_partner_res_users_partner_idTores_partner                                                 res_partner                           @relation("res_users_partner_idTores_partner", fields: [partner_id], references: [id], onUpdate: NoAction)
  res_users_res_users_write_uidTores_users                                                      res_users?                            @relation("res_users_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  other_res_users_res_users_write_uidTores_users                                                res_users[]                           @relation("res_users_write_uidTores_users")
  res_users_apikeys                                                                             res_users_apikeys[]
  res_users_apikeys_description_res_users_apikeys_description_create_uidTores_users             res_users_apikeys_description[]       @relation("res_users_apikeys_description_create_uidTores_users")
  res_users_apikeys_description_res_users_apikeys_description_write_uidTores_users              res_users_apikeys_description[]       @relation("res_users_apikeys_description_write_uidTores_users")
  res_users_deletion_res_users_deletion_create_uidTores_users                                   res_users_deletion[]                  @relation("res_users_deletion_create_uidTores_users")
  res_users_deletion_res_users_deletion_user_idTores_users                                      res_users_deletion[]                  @relation("res_users_deletion_user_idTores_users")
  res_users_deletion_res_users_deletion_write_uidTores_users                                    res_users_deletion[]                  @relation("res_users_deletion_write_uidTores_users")
  res_users_identitycheck_res_users_identitycheck_create_uidTores_users                         res_users_identitycheck[]             @relation("res_users_identitycheck_create_uidTores_users")
  res_users_identitycheck_res_users_identitycheck_write_uidTores_users                          res_users_identitycheck[]             @relation("res_users_identitycheck_write_uidTores_users")
  res_users_log_res_users_log_create_uidTores_users                                             res_users_log[]                       @relation("res_users_log_create_uidTores_users")
  res_users_log_res_users_log_write_uidTores_users                                              res_users_log[]                       @relation("res_users_log_write_uidTores_users")
  res_users_settings_res_users_settings_create_uidTores_users                                   res_users_settings[]                  @relation("res_users_settings_create_uidTores_users")
  res_users_settings_res_users_settings_user_idTores_users                                      res_users_settings?                   @relation("res_users_settings_user_idTores_users")
  res_users_settings_res_users_settings_write_uidTores_users                                    res_users_settings[]                  @relation("res_users_settings_write_uidTores_users")
  res_users_web_tour_tour_rel                                                                   res_users_web_tour_tour_rel[]
  reset_view_arch_wizard_reset_view_arch_wizard_create_uidTores_users                           reset_view_arch_wizard[]              @relation("reset_view_arch_wizard_create_uidTores_users")
  reset_view_arch_wizard_reset_view_arch_wizard_write_uidTores_users                            reset_view_arch_wizard[]              @relation("reset_view_arch_wizard_write_uidTores_users")
  web_editor_converter_test_web_editor_converter_test_create_uidTores_users                     web_editor_converter_test[]           @relation("web_editor_converter_test_create_uidTores_users")
  web_editor_converter_test_web_editor_converter_test_write_uidTores_users                      web_editor_converter_test[]           @relation("web_editor_converter_test_write_uidTores_users")
  web_editor_converter_test_sub_web_editor_converter_test_sub_create_uidTores_users             web_editor_converter_test_sub[]       @relation("web_editor_converter_test_sub_create_uidTores_users")
  web_editor_converter_test_sub_web_editor_converter_test_sub_write_uidTores_users              web_editor_converter_test_sub[]       @relation("web_editor_converter_test_sub_write_uidTores_users")
  web_tour_tour_web_tour_tour_create_uidTores_users                                             web_tour_tour[]                       @relation("web_tour_tour_create_uidTores_users")
  web_tour_tour_web_tour_tour_write_uidTores_users                                              web_tour_tour[]                       @relation("web_tour_tour_write_uidTores_users")
  web_tour_tour_step_web_tour_tour_step_create_uidTores_users                                   web_tour_tour_step[]                  @relation("web_tour_tour_step_create_uidTores_users")
  web_tour_tour_step_web_tour_tour_step_write_uidTores_users                                    web_tour_tour_step[]                  @relation("web_tour_tour_step_write_uidTores_users")
  wizard_ir_model_menu_create_wizard_ir_model_menu_create_create_uidTores_users                 wizard_ir_model_menu_create[]         @relation("wizard_ir_model_menu_create_create_uidTores_users")
  wizard_ir_model_menu_create_wizard_ir_model_menu_create_write_uidTores_users                  wizard_ir_model_menu_create[]         @relation("wizard_ir_model_menu_create_write_uidTores_users")

  @@index([partner_id], map: "res_users__partner_id_index")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model res_users_apikeys {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar
  user_id         Int
  scope           String?   @db.VarChar
  expiration_date DateTime? @db.Timestamp(6)
  index           String?   @db.VarChar(8)
  key             String?   @db.VarChar
  create_date     DateTime? @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  res_users       res_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id, index])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_users_apikeys_description {
  id                                                            Int        @id @default(autoincrement())
  create_uid                                                    Int?
  write_uid                                                     Int?
  name                                                          String     @db.VarChar
  duration                                                      String     @db.VarChar
  expiration_date                                               DateTime?  @db.Timestamp(6)
  create_date                                                   DateTime?  @db.Timestamp(6)
  write_date                                                    DateTime?  @db.Timestamp(6)
  res_users_res_users_apikeys_description_create_uidTores_users res_users? @relation("res_users_apikeys_description_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_users_apikeys_description_write_uidTores_users  res_users? @relation("res_users_apikeys_description_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_users_deletion {
  id                                                 Int        @id @default(autoincrement())
  user_id                                            Int?
  user_id_int                                        Int?
  create_uid                                         Int?
  write_uid                                          Int?
  state                                              String     @db.VarChar
  create_date                                        DateTime?  @db.Timestamp(6)
  write_date                                         DateTime?  @db.Timestamp(6)
  res_users_res_users_deletion_create_uidTores_users res_users? @relation("res_users_deletion_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_users_deletion_user_idTores_users    res_users? @relation("res_users_deletion_user_idTores_users", fields: [user_id], references: [id], onUpdate: NoAction)
  res_users_res_users_deletion_write_uidTores_users  res_users? @relation("res_users_deletion_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_users_identitycheck {
  id                                                      Int        @id @default(autoincrement())
  create_uid                                              Int?
  write_uid                                               Int?
  request                                                 String?    @db.VarChar
  auth_method                                             String?    @db.VarChar
  password                                                String?    @db.VarChar
  create_date                                             DateTime?  @db.Timestamp(6)
  write_date                                              DateTime?  @db.Timestamp(6)
  res_users_res_users_identitycheck_create_uidTores_users res_users? @relation("res_users_identitycheck_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_users_identitycheck_write_uidTores_users  res_users? @relation("res_users_identitycheck_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_users_log {
  id                                            Int        @id @default(autoincrement())
  create_uid                                    Int?
  write_uid                                     Int?
  create_date                                   DateTime?  @db.Timestamp(6)
  write_date                                    DateTime?  @db.Timestamp(6)
  res_users_res_users_log_create_uidTores_users res_users? @relation("res_users_log_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_users_log_write_uidTores_users  res_users? @relation("res_users_log_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_users_settings {
  id                                                 Int        @id @default(autoincrement())
  user_id                                            Int        @unique(map: "res_users_settings_unique_user_id")
  create_uid                                         Int?
  write_uid                                          Int?
  create_date                                        DateTime?  @db.Timestamp(6)
  write_date                                         DateTime?  @db.Timestamp(6)
  res_users_res_users_settings_create_uidTores_users res_users? @relation("res_users_settings_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_users_settings_user_idTores_users    res_users  @relation("res_users_settings_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_res_users_settings_write_uidTores_users  res_users? @relation("res_users_settings_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model res_users_web_tour_tour_rel {
  web_tour_tour_id Int
  res_users_id     Int
  res_users        res_users     @relation(fields: [res_users_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  web_tour_tour    web_tour_tour @relation(fields: [web_tour_tour_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([web_tour_tour_id, res_users_id])
  @@index([res_users_id, web_tour_tour_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model reset_view_arch_wizard {
  id                                                            Int         @id @default(autoincrement())
  view_id                                                       Int?
  compare_view_id                                               Int?
  create_uid                                                    Int?
  write_uid                                                     Int?
  reset_mode                                                    String      @db.VarChar
  create_date                                                   DateTime?   @db.Timestamp(6)
  write_date                                                    DateTime?   @db.Timestamp(6)
  ir_ui_view_reset_view_arch_wizard_compare_view_idToir_ui_view ir_ui_view? @relation("reset_view_arch_wizard_compare_view_idToir_ui_view", fields: [compare_view_id], references: [id], onUpdate: NoAction)
  res_users_reset_view_arch_wizard_create_uidTores_users        res_users?  @relation("reset_view_arch_wizard_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view_reset_view_arch_wizard_view_idToir_ui_view         ir_ui_view? @relation("reset_view_arch_wizard_view_idToir_ui_view", fields: [view_id], references: [id], onUpdate: NoAction)
  res_users_reset_view_arch_wizard_write_uidTores_users         res_users?  @relation("reset_view_arch_wizard_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rule_group_rel {
  rule_group_id Int
  group_id      Int
  res_groups    res_groups @relation(fields: [group_id], references: [id], onUpdate: NoAction)
  ir_rule       ir_rule    @relation(fields: [rule_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([rule_group_id, group_id])
  @@index([group_id, rule_group_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model web_editor_converter_test {
  id                                                        Int                            @id @default(autoincrement())
  integer                                                   Int?
  many2one                                                  Int?
  create_uid                                                Int?
  write_uid                                                 Int?
  char                                                      String?                        @db.VarChar
  selection_str                                             String?                        @db.VarChar
  date                                                      DateTime?                      @db.Date
  html                                                      String?
  text                                                      String?
  numeric                                                   Decimal?                       @db.Decimal
  datetime                                                  DateTime?                      @db.Timestamp(6)
  create_date                                               DateTime?                      @db.Timestamp(6)
  write_date                                                DateTime?                      @db.Timestamp(6)
  float                                                     Float?
  binary                                                    Bytes?
  res_users_web_editor_converter_test_create_uidTores_users res_users?                     @relation("web_editor_converter_test_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  web_editor_converter_test_sub                             web_editor_converter_test_sub? @relation(fields: [many2one], references: [id], onUpdate: NoAction)
  res_users_web_editor_converter_test_write_uidTores_users  res_users?                     @relation("web_editor_converter_test_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model web_editor_converter_test_sub {
  id                                                            Int                         @id @default(autoincrement())
  create_uid                                                    Int?
  write_uid                                                     Int?
  name                                                          String?                     @db.VarChar
  create_date                                                   DateTime?                   @db.Timestamp(6)
  write_date                                                    DateTime?                   @db.Timestamp(6)
  web_editor_converter_test                                     web_editor_converter_test[]
  res_users_web_editor_converter_test_sub_create_uidTores_users res_users?                  @relation("web_editor_converter_test_sub_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_web_editor_converter_test_sub_write_uidTores_users  res_users?                  @relation("web_editor_converter_test_sub_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model web_tour_tour {
  id                                            Int                           @id @default(autoincrement())
  sequence                                      Int?
  create_uid                                    Int?
  write_uid                                     Int?
  name                                          String                        @unique(map: "web_tour_tour_uniq_name") @db.VarChar
  url                                           String?                       @db.VarChar
  rainbow_man_message                           Json?
  custom                                        Boolean?
  create_date                                   DateTime?                     @db.Timestamp(6)
  write_date                                    DateTime?                     @db.Timestamp(6)
  res_users_web_tour_tour_rel                   res_users_web_tour_tour_rel[]
  res_users_web_tour_tour_create_uidTores_users res_users?                    @relation("web_tour_tour_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_web_tour_tour_write_uidTores_users  res_users?                    @relation("web_tour_tour_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  web_tour_tour_step                            web_tour_tour_step[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model web_tour_tour_step {
  id                                                 Int           @id @default(autoincrement())
  tour_id                                            Int
  sequence                                           Int?
  create_uid                                         Int?
  write_uid                                          Int?
  trigger                                            String        @db.VarChar
  content                                            String?       @db.VarChar
  run                                                String?       @db.VarChar
  create_date                                        DateTime?     @db.Timestamp(6)
  write_date                                         DateTime?     @db.Timestamp(6)
  res_users_web_tour_tour_step_create_uidTores_users res_users?    @relation("web_tour_tour_step_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  web_tour_tour                                      web_tour_tour @relation(fields: [tour_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_web_tour_tour_step_write_uidTores_users  res_users?    @relation("web_tour_tour_step_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wizard_ir_model_menu_create {
  id                                                          Int        @id @default(autoincrement())
  menu_id                                                     Int
  create_uid                                                  Int?
  write_uid                                                   Int?
  name                                                        String     @db.VarChar
  create_date                                                 DateTime?  @db.Timestamp(6)
  write_date                                                  DateTime?  @db.Timestamp(6)
  res_users_wizard_ir_model_menu_create_create_uidTores_users res_users? @relation("wizard_ir_model_menu_create_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_menu                                                  ir_ui_menu @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_wizard_ir_model_menu_create_write_uidTores_users  res_users? @relation("wizard_ir_model_menu_create_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}
